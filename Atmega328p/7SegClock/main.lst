GAS LISTING /tmp/ccCqSliz.s 			page 1


   1               		.file	"main.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.stabs	"/home/edward/Microcontroller/Atmega328p/7SegClock/",100,0,2,.Ltext0
   8               		.stabs	"main.c",100,0,2,.Ltext0
   9               		.text
  10               	.Ltext0:
  11               		.stabs	"gcc2_compiled.",60,0,0,0
  12               		.stabs	"int:t(0,1)=r(0,1);-32768;32767;",128,0,0,0
  13               		.stabs	"char:t(0,2)=@s8;r(0,2);0;255;",128,0,0,0
  14               		.stabs	"long int:t(0,3)=@s32;r(0,3);020000000000;017777777777;",128,0,0,0
  15               		.stabs	"unsigned int:t(0,4)=r(0,4);0;0177777;",128,0,0,0
  16               		.stabs	"long unsigned int:t(0,5)=@s32;r(0,5);0;037777777777;",128,0,0,0
  17               		.stabs	"long long int:t(0,6)=@s64;r(0,6);01000000000000000000000;0777777777777777777777;",128,0,0,
  18               		.stabs	"long long unsigned int:t(0,7)=@s64;r(0,7);0;01777777777777777777777;",128,0,0,0
  19               		.stabs	"short int:t(0,8)=r(0,8);-32768;32767;",128,0,0,0
  20               		.stabs	"short unsigned int:t(0,9)=r(0,9);0;0177777;",128,0,0,0
  21               		.stabs	"signed char:t(0,10)=@s8;r(0,10);-128;127;",128,0,0,0
  22               		.stabs	"unsigned char:t(0,11)=@s8;r(0,11);0;255;",128,0,0,0
  23               		.stabs	"float:t(0,12)=r(0,1);4;0;",128,0,0,0
  24               		.stabs	"double:t(0,13)=r(0,1);4;0;",128,0,0,0
  25               		.stabs	"long double:t(0,14)=r(0,1);4;0;",128,0,0,0
  26               		.stabs	"short _Fract:t(0,15)=r(0,1);1;0;",128,0,0,0
  27               		.stabs	"long _Fract:t(0,16)=r(0,1);4;0;",128,0,0,0
  28               		.stabs	"long long _Fract:t(0,17)=r(0,1);8;0;",128,0,0,0
  29               		.stabs	"unsigned short _Fract:t(0,18)=r(0,1);1;0;",128,0,0,0
  30               		.stabs	"unsigned _Fract:t(0,19)=r(0,1);2;0;",128,0,0,0
  31               		.stabs	"unsigned long _Fract:t(0,20)=r(0,1);4;0;",128,0,0,0
  32               		.stabs	"unsigned long long _Fract:t(0,21)=r(0,1);8;0;",128,0,0,0
  33               		.stabs	"_Sat short _Fract:t(0,22)=r(0,1);1;0;",128,0,0,0
  34               		.stabs	"_Sat _Fract:t(0,23)=r(0,1);2;0;",128,0,0,0
  35               		.stabs	"_Sat long _Fract:t(0,24)=r(0,1);4;0;",128,0,0,0
  36               		.stabs	"_Sat long long _Fract:t(0,25)=r(0,1);8;0;",128,0,0,0
  37               		.stabs	"_Sat unsigned short _Fract:t(0,26)=r(0,1);1;0;",128,0,0,0
  38               		.stabs	"_Sat unsigned _Fract:t(0,27)=r(0,1);2;0;",128,0,0,0
  39               		.stabs	"_Sat unsigned long _Fract:t(0,28)=r(0,1);4;0;",128,0,0,0
  40               		.stabs	"_Sat unsigned long long _Fract:t(0,29)=r(0,1);8;0;",128,0,0,0
  41               		.stabs	"short _Accum:t(0,30)=r(0,1);2;0;",128,0,0,0
  42               		.stabs	"long _Accum:t(0,31)=r(0,1);8;0;",128,0,0,0
  43               		.stabs	"long long _Accum:t(0,32)=r(0,1);8;0;",128,0,0,0
  44               		.stabs	"unsigned short _Accum:t(0,33)=r(0,1);2;0;",128,0,0,0
  45               		.stabs	"unsigned _Accum:t(0,34)=r(0,1);4;0;",128,0,0,0
  46               		.stabs	"unsigned long _Accum:t(0,35)=r(0,1);8;0;",128,0,0,0
  47               		.stabs	"unsigned long long _Accum:t(0,36)=r(0,1);8;0;",128,0,0,0
  48               		.stabs	"_Sat short _Accum:t(0,37)=r(0,1);2;0;",128,0,0,0
  49               		.stabs	"_Sat _Accum:t(0,38)=r(0,1);4;0;",128,0,0,0
  50               		.stabs	"_Sat long _Accum:t(0,39)=r(0,1);8;0;",128,0,0,0
  51               		.stabs	"_Sat long long _Accum:t(0,40)=r(0,1);8;0;",128,0,0,0
  52               		.stabs	"_Sat unsigned short _Accum:t(0,41)=r(0,1);2;0;",128,0,0,0
  53               		.stabs	"_Sat unsigned _Accum:t(0,42)=r(0,1);4;0;",128,0,0,0
  54               		.stabs	"_Sat unsigned long _Accum:t(0,43)=r(0,1);8;0;",128,0,0,0
  55               		.stabs	"_Sat unsigned long long _Accum:t(0,44)=r(0,1);8;0;",128,0,0,0
  56               		.stabs	"void:t(0,45)=(0,45)",128,0,0,0
  57               		.stabs	"/usr/lib/avr/include/avr/io.h",130,0,0,0
GAS LISTING /tmp/ccCqSliz.s 			page 2


  58               		.stabs	"/usr/lib/avr/include/avr/sfr_defs.h",130,0,0,0
  59               		.stabs	"/usr/lib/avr/include/inttypes.h",130,0,0,0
  60               		.stabs	"/usr/lib/gcc/avr/4.8.1/include/stdint.h",130,0,0,0
  61               		.stabs	"/usr/lib/avr/include/stdint.h",130,0,0,0
  62               		.stabs	"int8_t:t(5,1)=(0,10)",128,0,121,0
  63               		.stabs	"uint8_t:t(5,2)=(0,11)",128,0,122,0
  64               		.stabs	"int16_t:t(5,3)=(0,1)",128,0,123,0
  65               		.stabs	"uint16_t:t(5,4)=(0,4)",128,0,124,0
  66               		.stabs	"int32_t:t(5,5)=(0,3)",128,0,125,0
  67               		.stabs	"uint32_t:t(5,6)=(0,5)",128,0,126,0
  68               		.stabs	"int64_t:t(5,7)=(0,6)",128,0,128,0
  69               		.stabs	"uint64_t:t(5,8)=(0,7)",128,0,129,0
  70               		.stabs	"intptr_t:t(5,9)=(5,3)",128,0,142,0
  71               		.stabs	"uintptr_t:t(5,10)=(5,4)",128,0,147,0
  72               		.stabs	"int_least8_t:t(5,11)=(5,1)",128,0,159,0
  73               		.stabs	"uint_least8_t:t(5,12)=(5,2)",128,0,164,0
  74               		.stabs	"int_least16_t:t(5,13)=(5,3)",128,0,169,0
  75               		.stabs	"uint_least16_t:t(5,14)=(5,4)",128,0,174,0
  76               		.stabs	"int_least32_t:t(5,15)=(5,5)",128,0,179,0
  77               		.stabs	"uint_least32_t:t(5,16)=(5,6)",128,0,184,0
  78               		.stabs	"int_least64_t:t(5,17)=(5,7)",128,0,192,0
  79               		.stabs	"uint_least64_t:t(5,18)=(5,8)",128,0,199,0
  80               		.stabs	"int_fast8_t:t(5,19)=(5,1)",128,0,213,0
  81               		.stabs	"uint_fast8_t:t(5,20)=(5,2)",128,0,218,0
  82               		.stabs	"int_fast16_t:t(5,21)=(5,3)",128,0,223,0
  83               		.stabs	"uint_fast16_t:t(5,22)=(5,4)",128,0,228,0
  84               		.stabs	"int_fast32_t:t(5,23)=(5,5)",128,0,233,0
  85               		.stabs	"uint_fast32_t:t(5,24)=(5,6)",128,0,238,0
  86               		.stabs	"int_fast64_t:t(5,25)=(5,7)",128,0,246,0
  87               		.stabs	"uint_fast64_t:t(5,26)=(5,8)",128,0,253,0
  88               		.stabs	"intmax_t:t(5,27)=(5,7)",128,0,273,0
  89               		.stabs	"uintmax_t:t(5,28)=(5,8)",128,0,278,0
  90               		.stabn	162,0,0,0
  91               		.stabn	162,0,0,0
  92               		.stabs	"int_farptr_t:t(3,1)=(5,5)",128,0,77,0
  93               		.stabs	"uint_farptr_t:t(3,2)=(5,6)",128,0,81,0
  94               		.stabn	162,0,0,0
  95               		.stabn	162,0,0,0
  96               		.stabs	"/usr/lib/avr/include/avr/fuse.h",130,0,0,0
  97               		.stabs	"__fuse_t:t(6,1)=(6,2)=s3low:(0,11),0,8;high:(0,11),8,8;extended:(0,11),16,8;;",128,0,244,0
  98               		.stabn	162,0,0,0
  99               		.stabn	162,0,0,0
 100               		.stabs	"/usr/lib/avr/include/avr/power.h",130,0,0,0
 101               		.stabs	" :T(7,1)=@s8;eclock_div_1:0,clock_div_2:1,clock_div_4:2,clock_div_8:3,clock_div_16:4,clock
 102               		.stabs	"clock_div_t:t(7,2)=(7,1)",128,0,3174,0
 103               		.stabn	162,0,0,0
 104               		.section	.rodata
 105               	.LC0:
 106 0000 FC        		.byte	-4
 107 0001 60        		.byte	96
 108 0002 DA        		.byte	-38
 109 0003 F2        		.byte	-14
 110 0004 66        		.byte	102
 111 0005 B6        		.byte	-74
 112 0006 3E        		.byte	62
 113 0007 E0        		.byte	-32
 114 0008 FE        		.byte	-2
GAS LISTING /tmp/ccCqSliz.s 			page 3


 115 0009 E6        		.byte	-26
 116               		.section	.text.startup,"ax",@progbits
 117               		.stabs	"main:F(0,1)",36,0,25,main
 118               	.global	main
 119               		.type	main, @function
 120               	main:
 121               		.stabd	46,0,0
   1:main.c        **** #include <avr/io.h> //allows more human readable stuff
   2:main.c        **** #include <avr/interrupt.h>  //allows interrupts
   3:main.c        **** #include <avr/power.h> //power reduction management
   4:main.c        **** 
   5:main.c        **** #include "ShiftOut.h"
   6:main.c        **** #include "IIC.h"
   7:main.c        **** #include "Timer0.h"
   8:main.c        **** 
   9:main.c        **** #define LatchPin 2
  10:main.c        **** #define DataPin 3
  11:main.c        **** #define ClockPin 4
  12:main.c        **** 
  13:main.c        **** #define MilMask 0x20
  14:main.c        **** #define MilPin PINB
  15:main.c        **** #define HourPin PINB
  16:main.c        **** #define HourMask 0x20
  17:main.c        **** #define MinutePin PINB
  18:main.c        **** #define MinuteMask 0x20
  19:main.c        **** //both preceding are arbitrary and currently placeholders
  20:main.c        **** 
  21:main.c        **** volatile uint8_t MilTimeChange = 0;
  22:main.c        **** volatile uint8_t HourAdd = 0;
  23:main.c        **** volatile uint8_t MinuteAdd = 0;
  24:main.c        **** 
  25:main.c        **** int main(void){
 122               		.stabn	68,0,25,.LM0-.LFBB1
 123               	.LM0:
 124               	.LFBB1:
 125 0000 CF93      		push r28
 126 0002 DF93      		push r29
 127 0004 CDB7      		in r28,__SP_L__
 128 0006 DEB7      		in r29,__SP_H__
 129 0008 2B97      		sbiw r28,11
 130 000a 0FB6      		in __tmp_reg__,__SREG__
 131 000c F894      		cli
 132 000e DEBF      		out __SP_H__,r29
 133 0010 0FBE      		out __SREG__,__tmp_reg__
 134 0012 CDBF      		out __SP_L__,r28
 135               	/* prologue: function */
 136               	/* frame size = 11 */
 137               	/* stack size = 13 */
 138               	.L__stack_usage = 13
  26:main.c        ****   DDRD = 0xff;
 139               		.stabn	68,0,26,.LM1-.LFBB1
 140               	.LM1:
 141 0014 8FEF      		ldi r24,lo8(-1)
 142 0016 8AB9      		out 0xa,r24
  27:main.c        ****   DDRC = 0xff;
 143               		.stabn	68,0,27,.LM2-.LFBB1
 144               	.LM2:
GAS LISTING /tmp/ccCqSliz.s 			page 4


 145 0018 87B9      		out 0x7,r24
  28:main.c        ****   uint8_t numbers[] = {252,96,218,242,102,182,62,224,254,230};
 146               		.stabn	68,0,28,.LM3-.LFBB1
 147               	.LM3:
 148 001a 8AE0      		ldi r24,lo8(10)
 149 001c E0E0      		ldi r30,lo8(.LC0)
 150 001e F0E0      		ldi r31,hi8(.LC0)
 151 0020 DE01      		movw r26,r28
 152 0022 1196      		adiw r26,1
 153               		0:
 154 0024 0190      		ld r0,Z+
 155 0026 0D92      		st X+,r0
 156 0028 8A95      		dec r24
 157 002a 01F4      		brne 0b
  29:main.c        ****   uint8_t address = 0xD0; //1101000
  30:main.c        ****   TWIInit();
 158               		.stabn	68,0,30,.LM4-.LFBB1
 159               	.LM4:
 160 002c 0E94 0000 		call TWIInit
  31:main.c        ****   TWIStart();
 161               		.stabn	68,0,31,.LM5-.LFBB1
 162               	.LM5:
 163 0030 0E94 0000 		call TWIStart
  32:main.c        ****   TWIWrite(address | (0<<0));
 164               		.stabn	68,0,32,.LM6-.LFBB1
 165               	.LM6:
 166 0034 80ED      		ldi r24,lo8(-48)
 167 0036 0E94 0000 		call TWIWrite
  33:main.c        ****   TWIWrite(0x00);
 168               		.stabn	68,0,33,.LM7-.LFBB1
 169               	.LM7:
 170 003a 80E0      		ldi r24,0
 171 003c 0E94 0000 		call TWIWrite
  34:main.c        ****   TWIWrite(0x00);
 172               		.stabn	68,0,34,.LM8-.LFBB1
 173               	.LM8:
 174 0040 80E0      		ldi r24,0
 175 0042 0E94 0000 		call TWIWrite
  35:main.c        ****   TWIStart();
 176               		.stabn	68,0,35,.LM9-.LFBB1
 177               	.LM9:
 178 0046 0E94 0000 		call TWIStart
  36:main.c        ****   TWIWrite(address | (0<<0));
 179               		.stabn	68,0,36,.LM10-.LFBB1
 180               	.LM10:
 181 004a 80ED      		ldi r24,lo8(-48)
 182 004c 0E94 0000 		call TWIWrite
  37:main.c        ****   TWIWrite(0x07);
 183               		.stabn	68,0,37,.LM11-.LFBB1
 184               	.LM11:
 185 0050 87E0      		ldi r24,lo8(7)
 186 0052 0E94 0000 		call TWIWrite
  38:main.c        ****   TWIWrite(0x03);
 187               		.stabn	68,0,38,.LM12-.LFBB1
 188               	.LM12:
 189 0056 83E0      		ldi r24,lo8(3)
 190 0058 0E94 0000 		call TWIWrite
GAS LISTING /tmp/ccCqSliz.s 			page 5


  39:main.c        ****   TWIStop();
 191               		.stabn	68,0,39,.LM13-.LFBB1
 192               	.LM13:
 193 005c 0E94 0000 		call TWIStop
  40:main.c        ****   
  41:main.c        ****   Timer0SetupMode(0x00);
 194               		.stabn	68,0,41,.LM14-.LFBB1
 195               	.LM14:
 196 0060 80E0      		ldi r24,0
 197 0062 0E94 0000 		call Timer0SetupMode
  42:main.c        ****   Timer0SetupPrescale(0x60);
 198               		.stabn	68,0,42,.LM15-.LFBB1
 199               	.LM15:
 200 0066 80E6      		ldi r24,lo8(96)
 201 0068 0E94 0000 		call Timer0SetupPrescale
  43:main.c        ****   Timer0SetupInterrupt(0x20);
 202               		.stabn	68,0,43,.LM16-.LFBB1
 203               	.LM16:
 204 006c 80E2      		ldi r24,lo8(32)
 205 006e 0E94 0000 		call Timer0SetupInterrupt
 206               	.L2:
 207               	.LBB2:
  44:main.c        ****   
  45:main.c        **** 
  46:main.c        ****   while(1){  
  47:main.c        **** /*    
  48:main.c        ****     static uint8_t MilTime = 0;
  49:main.c        **** 
  50:main.c        ****     if(MilTimeChange & !MilTime){//change to 24 hour clock
  51:main.c        ****       TWIStart();
  52:main.c        ****       TWIWrite(address | (0<<0));
  53:main.c        ****       TWIWrite(0x02);
  54:main.c        ****       TWIWrite(0x00);
  55:main.c        ****       TWIStop();
  56:main.c        ****       MilTime = 1;
  57:main.c        ****     }else if(MilTimeChange & MilTime){//change to 12 hour clock
  58:main.c        ****       TWIStart();
  59:main.c        ****       TWIWrite(address | (0<<0));
  60:main.c        ****       TWIWrite(0x02);
  61:main.c        ****       TWIWrite(0x40);
  62:main.c        ****       TWIStop();
  63:main.c        ****       MilTime = 0;
  64:main.c        ****     }
  65:main.c        **** */    
  66:main.c        **** 
  67:main.c        ****     TWIStart();
 208               		.stabn	68,0,67,.LM17-.LFBB1
 209               	.LM17:
 210 0072 0E94 0000 		call TWIStart
  68:main.c        ****     TWIWrite(address | (0<<0));
 211               		.stabn	68,0,68,.LM18-.LFBB1
 212               	.LM18:
 213 0076 80ED      		ldi r24,lo8(-48)
 214 0078 0E94 0000 		call TWIWrite
  69:main.c        ****     TWIWrite(0x01);
 215               		.stabn	68,0,69,.LM19-.LFBB1
 216               	.LM19:
GAS LISTING /tmp/ccCqSliz.s 			page 6


 217 007c 81E0      		ldi r24,lo8(1)
 218 007e 0E94 0000 		call TWIWrite
  70:main.c        ****     TWIStart();
 219               		.stabn	68,0,70,.LM20-.LFBB1
 220               	.LM20:
 221 0082 0E94 0000 		call TWIStart
  71:main.c        ****     TWIWrite(address | (1<<0));
 222               		.stabn	68,0,71,.LM21-.LFBB1
 223               	.LM21:
 224 0086 81ED      		ldi r24,lo8(-47)
 225 0088 0E94 0000 		call TWIWrite
  72:main.c        ****     uint8_t Minutes = TWIReadACK();
 226               		.stabn	68,0,72,.LM22-.LFBB1
 227               	.LM22:
 228 008c 0E94 0000 		call TWIReadACK
 229 0090 182F      		mov r17,r24
  73:main.c        ****     uint8_t Hours = TWIReadNACK();
 230               		.stabn	68,0,73,.LM23-.LFBB1
 231               	.LM23:
 232 0092 0E94 0000 		call TWIReadNACK
  74:main.c        ****     TWIStop();
 233               		.stabn	68,0,74,.LM24-.LFBB1
 234               	.LM24:
 235 0096 8B87      		std Y+11,r24
 236 0098 0E94 0000 		call TWIStop
  75:main.c        **** 
  76:main.c        ****     static uint8_t MinutesOnes, MinutesTens, HoursOnes, HoursTens;
  77:main.c        **** 
  78:main.c        ****     MinutesOnes = Minutes & 0x0F;//(Minutes & 0x01) + (2*(Minutes & 0x02)) + (4*(Minutes & 0x04)) +
 237               		.stabn	68,0,78,.LM25-.LFBB1
 238               	.LM25:
 239 009c 912F      		mov r25,r17
 240 009e 9F70      		andi r25,lo8(15)
 241 00a0 9093 0000 		sts MinutesOnes.1424,r25
  79:main.c        ****     MinutesTens = Minutes & 0x80;//(Minutes & 0x10) + (2*(Minutes & 0x20)) + (4*(Minutes & 0x40));
 242               		.stabn	68,0,79,.LM26-.LFBB1
 243               	.LM26:
 244 00a4 1078      		andi r17,lo8(-128)
 245 00a6 1093 0000 		sts MinutesTens.1425,r17
  80:main.c        ****     HoursOnes = Hours & 0x0F;//(Hours & 0x01) + (2*(Hours & 0x02)) + (4*(Hours & 0x04)) + (8*(Hours
 246               		.stabn	68,0,80,.LM27-.LFBB1
 247               	.LM27:
 248 00aa 8B85      		ldd r24,Y+11
 249 00ac 982F      		mov r25,r24
 250 00ae 9F70      		andi r25,lo8(15)
 251 00b0 9093 0000 		sts HoursOnes.1426,r25
  81:main.c        **** //    if(MilTime){
  82:main.c        **** //      HoursTens = (Hours & 0x10) + (2*(Hours & 0x20));
  83:main.c        **** //    }else {
  84:main.c        ****       HoursTens = (Hours & 0x10);
 252               		.stabn	68,0,84,.LM28-.LFBB1
 253               	.LM28:
 254 00b4 8071      		andi r24,lo8(16)
 255 00b6 8093 0000 		sts HoursTens.1427,r24
  85:main.c        **** //    }
  86:main.c        **** 
  87:main.c        ****     PORTD &= ~(1 << LatchPin);
GAS LISTING /tmp/ccCqSliz.s 			page 7


 256               		.stabn	68,0,87,.LM29-.LFBB1
 257               	.LM29:
 258 00ba 5A98      		cbi 0xb,2
  88:main.c        ****     ShiftOut(ClockPin,DataPin,numbers[HoursOnes]);
 259               		.stabn	68,0,88,.LM30-.LFBB1
 260               	.LM30:
 261 00bc 8091 0000 		lds r24,HoursOnes.1426
 262 00c0 E1E0      		ldi r30,lo8(1)
 263 00c2 F0E0      		ldi r31,0
 264 00c4 EC0F      		add r30,r28
 265 00c6 FD1F      		adc r31,r29
 266 00c8 E80F      		add r30,r24
 267 00ca F11D      		adc r31,__zero_reg__
 268 00cc 4081      		ld r20,Z
 269 00ce 50E0      		ldi r21,0
 270 00d0 63E0      		ldi r22,lo8(3)
 271 00d2 70E0      		ldi r23,0
 272 00d4 84E0      		ldi r24,lo8(4)
 273 00d6 90E0      		ldi r25,0
 274 00d8 0E94 0000 		call ShiftOut
  89:main.c        ****     ShiftOut(ClockPin,DataPin,numbers[HoursTens]);
 275               		.stabn	68,0,89,.LM31-.LFBB1
 276               	.LM31:
 277 00dc 8091 0000 		lds r24,HoursTens.1427
 278 00e0 E1E0      		ldi r30,lo8(1)
 279 00e2 F0E0      		ldi r31,0
 280 00e4 EC0F      		add r30,r28
 281 00e6 FD1F      		adc r31,r29
 282 00e8 E80F      		add r30,r24
 283 00ea F11D      		adc r31,__zero_reg__
 284 00ec 4081      		ld r20,Z
 285 00ee 50E0      		ldi r21,0
 286 00f0 63E0      		ldi r22,lo8(3)
 287 00f2 70E0      		ldi r23,0
 288 00f4 84E0      		ldi r24,lo8(4)
 289 00f6 90E0      		ldi r25,0
 290 00f8 0E94 0000 		call ShiftOut
  90:main.c        ****     ShiftOut(ClockPin,DataPin,numbers[MinutesOnes]);
 291               		.stabn	68,0,90,.LM32-.LFBB1
 292               	.LM32:
 293 00fc 8091 0000 		lds r24,MinutesOnes.1424
 294 0100 E1E0      		ldi r30,lo8(1)
 295 0102 F0E0      		ldi r31,0
 296 0104 EC0F      		add r30,r28
 297 0106 FD1F      		adc r31,r29
 298 0108 E80F      		add r30,r24
 299 010a F11D      		adc r31,__zero_reg__
 300 010c 4081      		ld r20,Z
 301 010e 50E0      		ldi r21,0
 302 0110 63E0      		ldi r22,lo8(3)
 303 0112 70E0      		ldi r23,0
 304 0114 84E0      		ldi r24,lo8(4)
 305 0116 90E0      		ldi r25,0
 306 0118 0E94 0000 		call ShiftOut
  91:main.c        ****     ShiftOut(ClockPin,DataPin,numbers[MinutesTens]);
 307               		.stabn	68,0,91,.LM33-.LFBB1
 308               	.LM33:
GAS LISTING /tmp/ccCqSliz.s 			page 8


 309 011c 8091 0000 		lds r24,MinutesTens.1425
 310 0120 E1E0      		ldi r30,lo8(1)
 311 0122 F0E0      		ldi r31,0
 312 0124 EC0F      		add r30,r28
 313 0126 FD1F      		adc r31,r29
 314 0128 E80F      		add r30,r24
 315 012a F11D      		adc r31,__zero_reg__
 316 012c 4081      		ld r20,Z
 317 012e 50E0      		ldi r21,0
 318 0130 63E0      		ldi r22,lo8(3)
 319 0132 70E0      		ldi r23,0
 320 0134 84E0      		ldi r24,lo8(4)
 321 0136 90E0      		ldi r25,0
 322 0138 0E94 0000 		call ShiftOut
  92:main.c        ****     PORTD |= (1 << LatchPin);
 323               		.stabn	68,0,92,.LM34-.LFBB1
 324               	.LM34:
 325 013c 5A9A      		sbi 0xb,2
 326 013e 00C0      		rjmp .L2
 327               	.LBE2:
 328               		.size	main, .-main
 329               		.stabs	"numbers:(0,46)=ar(0,47)=r(0,47);0;0177777;;0;9;(5,2)",128,0,28,1
 330               		.stabn	192,0,0,.LFBB1-.LFBB1
 331               		.stabs	"Minutes:r(5,2)",64,0,72,17
 332               		.stabs	"Hours:r(5,2)",64,0,73,24
 333               		.stabs	"MinutesOnes:V(5,2)",40,0,76,MinutesOnes.1424
 334               		.stabs	"MinutesTens:V(5,2)",40,0,76,MinutesTens.1425
 335               		.stabs	"HoursOnes:V(5,2)",40,0,76,HoursOnes.1426
 336               		.stabs	"HoursTens:V(5,2)",40,0,76,HoursTens.1427
 337               		.stabn	192,0,0,.LBB2-.LFBB1
 338               		.stabn	224,0,0,.LBE2-.LFBB1
 339               		.stabn	224,0,0,.Lscope1-.LFBB1
 340               	.Lscope1:
 341               		.stabs	"",36,0,0,.Lscope1-.LFBB1
 342               		.stabd	78,0,0
 343               		.text
 344               		.stabs	"__vector_16:F(0,45)",36,0,137,__vector_16
 345               	.global	__vector_16
 346               		.type	__vector_16, @function
 347               	__vector_16:
 348               		.stabd	46,0,0
  93:main.c        **** /*    
  94:main.c        ****     if(HourAdd){
  95:main.c        ****       HoursOnes += 1;
  96:main.c        ****       if(MilTime){
  97:main.c        ****         if((HoursOnes == 4) & (HoursTens == 2)){
  98:main.c        ****           HoursTens = 0;
  99:main.c        ****           HoursOnes = 0;
 100:main.c        ****         }else if((HoursOnes == 10) & (HoursTens < 2)){
 101:main.c        ****           HoursTens += 1;
 102:main.c        ****           HoursOnes = 0;
 103:main.c        ****         }
 104:main.c        ****       }else{
 105:main.c        ****         if((HoursOnes == 3) & (HoursTens == 1)){
 106:main.c        ****           HoursTens = 0;
 107:main.c        ****           HoursOnes = 1;
 108:main.c        ****         }else if((HoursOnes = 10) & (HoursTens < 1)){
GAS LISTING /tmp/ccCqSliz.s 			page 9


 109:main.c        ****           HoursTens += 1;
 110:main.c        ****           HoursOnes = 0;
 111:main.c        ****         }
 112:main.c        ****       }
 113:main.c        ****       
 114:main.c        ****       if(MilTime){
 115:main.c        ****         TWIStart();
 116:main.c        ****         TWIWrite(address | (0 << 0));
 117:main.c        ****         TWIWrite(0x02);
 118:main.c        ****         TWIWrite(0x00 | (0<<6) | ((HoursTens & 0x03)<<5) | ((HoursOnes & 0x0F)<<3));
 119:main.c        ****         TWIStop();
 120:main.c        ****       }else {
 121:main.c        ****         TWIStart();
 122:main.c        ****         TWIWrite(address | (0<<0));
 123:main.c        ****         TWIWrite(0x02);
 124:main.c        ****         TWIWrite(0x00 | (1<<6) | ((HoursTens & 0x03)<<5) | ((HoursOnes & 0x0F)<<3));
 125:main.c        ****         TWIStop();
 126:main.c        ****       }
 127:main.c        ****     }
 128:main.c        ****     
 129:main.c        ****     
 130:main.c        **** */    
 131:main.c        ****     
 132:main.c        ****     
 133:main.c        ****   }
 134:main.c        **** }
 135:main.c        **** 
 136:main.c        ****                  
 137:main.c        **** ISR(TIMER0_OVF_vect){
 349               		.stabn	68,0,137,.LM35-.LFBB2
 350               	.LM35:
 351               	.LFBB2:
 352 0000 1F92      		push r1
 353 0002 0F92      		push r0
 354 0004 0FB6      		in r0,__SREG__
 355 0006 0F92      		push r0
 356 0008 1124      		clr __zero_reg__
 357 000a 8F93      		push r24
 358               	/* prologue: Signal */
 359               	/* frame size = 0 */
 360               	/* stack size = 4 */
 361               	.L__stack_usage = 4
 138:main.c        ****   if(MilPin & MilMask){
 362               		.stabn	68,0,138,.LM36-.LFBB2
 363               	.LM36:
 364 000c 1D9B      		sbis 0x3,5
 365 000e 00C0      		rjmp .L5
 139:main.c        ****     MilTimeChange = 1;
 366               		.stabn	68,0,139,.LM37-.LFBB2
 367               	.LM37:
 368 0010 81E0      		ldi r24,lo8(1)
 369 0012 8093 0000 		sts MilTimeChange,r24
 370 0016 00C0      		rjmp .L6
 371               	.L5:
 140:main.c        ****   }else {
 141:main.c        ****     MilTimeChange = 0;
 372               		.stabn	68,0,141,.LM38-.LFBB2
GAS LISTING /tmp/ccCqSliz.s 			page 10


 373               	.LM38:
 374 0018 1092 0000 		sts MilTimeChange,__zero_reg__
 375               	.L6:
 142:main.c        ****   }
 143:main.c        ****   
 144:main.c        ****   if(HourPin & HourMask){
 376               		.stabn	68,0,144,.LM39-.LFBB2
 377               	.LM39:
 378 001c 1D9B      		sbis 0x3,5
 379 001e 00C0      		rjmp .L7
 145:main.c        ****     HourAdd = 1;
 380               		.stabn	68,0,145,.LM40-.LFBB2
 381               	.LM40:
 382 0020 81E0      		ldi r24,lo8(1)
 383 0022 8093 0000 		sts HourAdd,r24
 384 0026 00C0      		rjmp .L8
 385               	.L7:
 146:main.c        ****   }else {
 147:main.c        ****     HourAdd = 0;
 386               		.stabn	68,0,147,.LM41-.LFBB2
 387               	.LM41:
 388 0028 1092 0000 		sts HourAdd,__zero_reg__
 389               	.L8:
 148:main.c        ****   }
 149:main.c        ****   
 150:main.c        ****   if(MinutePin & MinuteMask){
 390               		.stabn	68,0,150,.LM42-.LFBB2
 391               	.LM42:
 392 002c 1D9B      		sbis 0x3,5
 393 002e 00C0      		rjmp .L9
 151:main.c        ****     MinuteAdd = 1;
 394               		.stabn	68,0,151,.LM43-.LFBB2
 395               	.LM43:
 396 0030 81E0      		ldi r24,lo8(1)
 397 0032 8093 0000 		sts MinuteAdd,r24
 398 0036 00C0      		rjmp .L4
 399               	.L9:
 152:main.c        ****   }else{
 153:main.c        ****     MinuteAdd = 0;
 400               		.stabn	68,0,153,.LM44-.LFBB2
 401               	.LM44:
 402 0038 1092 0000 		sts MinuteAdd,__zero_reg__
 403               	.L4:
 404               	/* epilogue start */
 154:main.c        ****   }
 155:main.c        **** }
 405               		.stabn	68,0,155,.LM45-.LFBB2
 406               	.LM45:
 407 003c 8F91      		pop r24
 408 003e 0F90      		pop r0
 409 0040 0FBE      		out __SREG__,r0
 410 0042 0F90      		pop r0
 411 0044 1F90      		pop r1
 412 0046 1895      		reti
 413               		.size	__vector_16, .-__vector_16
 414               	.Lscope2:
 415               		.stabs	"",36,0,0,.Lscope2-.LFBB2
GAS LISTING /tmp/ccCqSliz.s 			page 11


 416               		.stabd	78,0,0
 417               		.local	HoursTens.1427
 418               		.comm	HoursTens.1427,1,1
 419               		.local	HoursOnes.1426
 420               		.comm	HoursOnes.1426,1,1
 421               		.local	MinutesTens.1425
 422               		.comm	MinutesTens.1425,1,1
 423               		.local	MinutesOnes.1424
 424               		.comm	MinutesOnes.1424,1,1
 425               	.global	MinuteAdd
 426               		.section .bss
 427               		.type	MinuteAdd, @object
 428               		.size	MinuteAdd, 1
 429               	MinuteAdd:
 430 0000 00        		.zero	1
 431               	.global	HourAdd
 432               		.type	HourAdd, @object
 433               		.size	HourAdd, 1
 434               	HourAdd:
 435 0001 00        		.zero	1
 436               	.global	MilTimeChange
 437               		.type	MilTimeChange, @object
 438               		.size	MilTimeChange, 1
 439               	MilTimeChange:
 440 0002 00        		.zero	1
 441               		.stabs	"MilTimeChange:G(0,48)=B(5,2)",32,0,21,0
 442               		.stabs	"HourAdd:G(0,48)",32,0,22,0
 443               		.stabs	"MinuteAdd:G(0,48)",32,0,23,0
 444               		.text
 445               		.stabs	"",100,0,0,.Letext0
 446               	.Letext0:
 447               		.ident	"GCC: (GNU) 4.8.1"
 448               	.global __do_copy_data
 449               	.global __do_clear_bss
GAS LISTING /tmp/ccCqSliz.s 			page 12


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccCqSliz.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccCqSliz.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccCqSliz.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccCqSliz.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccCqSliz.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccCqSliz.s:120    .text.startup:0000000000000000 main
     /tmp/ccCqSliz.s:422    .bss:0000000000000006 MinutesOnes.1424
     /tmp/ccCqSliz.s:420    .bss:0000000000000005 MinutesTens.1425
     /tmp/ccCqSliz.s:418    .bss:0000000000000004 HoursOnes.1426
                             .bss:0000000000000003 HoursTens.1427
     /tmp/ccCqSliz.s:347    .text:0000000000000000 __vector_16
     /tmp/ccCqSliz.s:439    .bss:0000000000000002 MilTimeChange
     /tmp/ccCqSliz.s:434    .bss:0000000000000001 HourAdd
     /tmp/ccCqSliz.s:429    .bss:0000000000000000 MinuteAdd

UNDEFINED SYMBOLS
TWIInit
TWIStart
TWIWrite
TWIStop
Timer0SetupMode
Timer0SetupPrescale
Timer0SetupInterrupt
TWIReadACK
TWIReadNACK
ShiftOut
__do_copy_data
__do_clear_bss
