GAS LISTING /tmp/ccTJ1L45.s 			page 1


   1               		.file	"mirf.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.stabs	"/home/edward/Microcontroller/Atmega328p/NRF24L01TestRecieve/",100,0,2,.Ltext0
   8               		.stabs	"../Libraries/OBLib/MIRF/mirf.c",100,0,2,.Ltext0
   9               		.text
  10               	.Ltext0:
  11               		.stabs	"gcc2_compiled.",60,0,0,0
  12               		.stabs	"int:t(0,1)=r(0,1);-32768;32767;",128,0,0,0
  13               		.stabs	"char:t(0,2)=@s8;r(0,2);0;255;",128,0,0,0
  14               		.stabs	"long int:t(0,3)=@s32;r(0,3);020000000000;017777777777;",128,0,0,0
  15               		.stabs	"unsigned int:t(0,4)=r(0,4);0;0177777;",128,0,0,0
  16               		.stabs	"long unsigned int:t(0,5)=@s32;r(0,5);0;037777777777;",128,0,0,0
  17               		.stabs	"long long int:t(0,6)=@s64;r(0,6);01000000000000000000000;0777777777777777777777;",128,0,0,
  18               		.stabs	"long long unsigned int:t(0,7)=@s64;r(0,7);0;01777777777777777777777;",128,0,0,0
  19               		.stabs	"short int:t(0,8)=r(0,8);-32768;32767;",128,0,0,0
  20               		.stabs	"short unsigned int:t(0,9)=r(0,9);0;0177777;",128,0,0,0
  21               		.stabs	"signed char:t(0,10)=@s8;r(0,10);-128;127;",128,0,0,0
  22               		.stabs	"unsigned char:t(0,11)=@s8;r(0,11);0;255;",128,0,0,0
  23               		.stabs	"float:t(0,12)=r(0,1);4;0;",128,0,0,0
  24               		.stabs	"double:t(0,13)=r(0,1);4;0;",128,0,0,0
  25               		.stabs	"long double:t(0,14)=r(0,1);4;0;",128,0,0,0
  26               		.stabs	"short _Fract:t(0,15)=r(0,1);1;0;",128,0,0,0
  27               		.stabs	"_Fract:t(0,16)=r(0,1);2;0;",128,0,0,0
  28               		.stabs	"long _Fract:t(0,17)=r(0,1);4;0;",128,0,0,0
  29               		.stabs	"long long _Fract:t(0,18)=r(0,1);8;0;",128,0,0,0
  30               		.stabs	"unsigned short _Fract:t(0,19)=r(0,1);1;0;",128,0,0,0
  31               		.stabs	"unsigned _Fract:t(0,20)=r(0,1);2;0;",128,0,0,0
  32               		.stabs	"unsigned long _Fract:t(0,21)=r(0,1);4;0;",128,0,0,0
  33               		.stabs	"unsigned long long _Fract:t(0,22)=r(0,1);8;0;",128,0,0,0
  34               		.stabs	"_Sat short _Fract:t(0,23)=r(0,1);1;0;",128,0,0,0
  35               		.stabs	"_Sat _Fract:t(0,24)=r(0,1);2;0;",128,0,0,0
  36               		.stabs	"_Sat long _Fract:t(0,25)=r(0,1);4;0;",128,0,0,0
  37               		.stabs	"_Sat long long _Fract:t(0,26)=r(0,1);8;0;",128,0,0,0
  38               		.stabs	"_Sat unsigned short _Fract:t(0,27)=r(0,1);1;0;",128,0,0,0
  39               		.stabs	"_Sat unsigned _Fract:t(0,28)=r(0,1);2;0;",128,0,0,0
  40               		.stabs	"_Sat unsigned long _Fract:t(0,29)=r(0,1);4;0;",128,0,0,0
  41               		.stabs	"_Sat unsigned long long _Fract:t(0,30)=r(0,1);8;0;",128,0,0,0
  42               		.stabs	"short _Accum:t(0,31)=r(0,1);2;0;",128,0,0,0
  43               		.stabs	"_Accum:t(0,32)=r(0,1);4;0;",128,0,0,0
  44               		.stabs	"long _Accum:t(0,33)=r(0,1);8;0;",128,0,0,0
  45               		.stabs	"long long _Accum:t(0,34)=r(0,1);8;0;",128,0,0,0
  46               		.stabs	"unsigned short _Accum:t(0,35)=r(0,1);2;0;",128,0,0,0
  47               		.stabs	"unsigned _Accum:t(0,36)=r(0,1);4;0;",128,0,0,0
  48               		.stabs	"unsigned long _Accum:t(0,37)=r(0,1);8;0;",128,0,0,0
  49               		.stabs	"unsigned long long _Accum:t(0,38)=r(0,1);8;0;",128,0,0,0
  50               		.stabs	"_Sat short _Accum:t(0,39)=r(0,1);2;0;",128,0,0,0
  51               		.stabs	"_Sat _Accum:t(0,40)=r(0,1);4;0;",128,0,0,0
  52               		.stabs	"_Sat long _Accum:t(0,41)=r(0,1);8;0;",128,0,0,0
  53               		.stabs	"_Sat long long _Accum:t(0,42)=r(0,1);8;0;",128,0,0,0
  54               		.stabs	"_Sat unsigned short _Accum:t(0,43)=r(0,1);2;0;",128,0,0,0
  55               		.stabs	"_Sat unsigned _Accum:t(0,44)=r(0,1);4;0;",128,0,0,0
  56               		.stabs	"_Sat unsigned long _Accum:t(0,45)=r(0,1);8;0;",128,0,0,0
  57               		.stabs	"_Sat unsigned long long _Accum:t(0,46)=r(0,1);8;0;",128,0,0,0
GAS LISTING /tmp/ccTJ1L45.s 			page 2


  58               		.stabs	"void:t(0,47)=(0,47)",128,0,0,0
  59               		.stabs	"../Libraries/OBLib/MIRF/mirf.h",130,0,0,0
  60               		.stabs	"/usr/lib/avr/include/avr/io.h",130,0,0,0
  61               		.stabs	"/usr/lib/avr/include/avr/sfr_defs.h",130,0,0,0
  62               		.stabs	"/usr/lib/avr/include/inttypes.h",130,0,0,0
  63               		.stabs	"/usr/lib/gcc/avr/4.8.1/include/stdint.h",130,0,0,0
  64               		.stabs	"/usr/lib/avr/include/stdint.h",130,0,0,0
  65               		.stabs	"int8_t:t(6,1)=(0,10)",128,0,121,0
  66               		.stabs	"uint8_t:t(6,2)=(0,11)",128,0,122,0
  67               		.stabs	"int16_t:t(6,3)=(0,1)",128,0,123,0
  68               		.stabs	"uint16_t:t(6,4)=(0,4)",128,0,124,0
  69               		.stabs	"int32_t:t(6,5)=(0,3)",128,0,125,0
  70               		.stabs	"uint32_t:t(6,6)=(0,5)",128,0,126,0
  71               		.stabs	"int64_t:t(6,7)=(0,6)",128,0,128,0
  72               		.stabs	"uint64_t:t(6,8)=(0,7)",128,0,129,0
  73               		.stabs	"intptr_t:t(6,9)=(6,3)",128,0,142,0
  74               		.stabs	"uintptr_t:t(6,10)=(6,4)",128,0,147,0
  75               		.stabs	"int_least8_t:t(6,11)=(6,1)",128,0,159,0
  76               		.stabs	"uint_least8_t:t(6,12)=(6,2)",128,0,164,0
  77               		.stabs	"int_least16_t:t(6,13)=(6,3)",128,0,169,0
  78               		.stabs	"uint_least16_t:t(6,14)=(6,4)",128,0,174,0
  79               		.stabs	"int_least32_t:t(6,15)=(6,5)",128,0,179,0
  80               		.stabs	"uint_least32_t:t(6,16)=(6,6)",128,0,184,0
  81               		.stabs	"int_least64_t:t(6,17)=(6,7)",128,0,192,0
  82               		.stabs	"uint_least64_t:t(6,18)=(6,8)",128,0,199,0
  83               		.stabs	"int_fast8_t:t(6,19)=(6,1)",128,0,213,0
  84               		.stabs	"uint_fast8_t:t(6,20)=(6,2)",128,0,218,0
  85               		.stabs	"int_fast16_t:t(6,21)=(6,3)",128,0,223,0
  86               		.stabs	"uint_fast16_t:t(6,22)=(6,4)",128,0,228,0
  87               		.stabs	"int_fast32_t:t(6,23)=(6,5)",128,0,233,0
  88               		.stabs	"uint_fast32_t:t(6,24)=(6,6)",128,0,238,0
  89               		.stabs	"int_fast64_t:t(6,25)=(6,7)",128,0,246,0
  90               		.stabs	"uint_fast64_t:t(6,26)=(6,8)",128,0,253,0
  91               		.stabs	"intmax_t:t(6,27)=(6,7)",128,0,273,0
  92               		.stabs	"uintmax_t:t(6,28)=(6,8)",128,0,278,0
  93               		.stabn	162,0,0,0
  94               		.stabn	162,0,0,0
  95               		.stabs	"int_farptr_t:t(4,1)=(6,5)",128,0,77,0
  96               		.stabs	"uint_farptr_t:t(4,2)=(6,6)",128,0,81,0
  97               		.stabn	162,0,0,0
  98               		.stabn	162,0,0,0
  99               		.stabs	"/usr/lib/avr/include/avr/fuse.h",130,0,0,0
 100               		.stabs	"__fuse_t:t(7,1)=(7,2)=s3low:(0,11),0,8;high:(0,11),8,8;extended:(0,11),16,8;;",128,0,244,0
 101               		.stabn	162,0,0,0
 102               		.stabn	162,0,0,0
 103               		.stabn	162,0,0,0
 104               		.stabs	"mirf_init:F(0,47)",36,0,44,mirf_init
 105               	.global	mirf_init
 106               		.type	mirf_init, @function
 107               	mirf_init:
 108               		.stabd	46,0,0
   1:../Libraries/OBLib/MIRF/mirf.c **** /*
   2:../Libraries/OBLib/MIRF/mirf.c ****     Copyright (c) 2007 Stefan Engelke <mbox@stefanengelke.de>
   3:../Libraries/OBLib/MIRF/mirf.c **** 
   4:../Libraries/OBLib/MIRF/mirf.c ****     Permission is hereby granted, free of charge, to any person 
   5:../Libraries/OBLib/MIRF/mirf.c ****     obtaining a copy of this software and associated documentation 
   6:../Libraries/OBLib/MIRF/mirf.c ****     files (the "Software"), to deal in the Software without 
GAS LISTING /tmp/ccTJ1L45.s 			page 3


   7:../Libraries/OBLib/MIRF/mirf.c ****     restriction, including without limitation the rights to use, copy, 
   8:../Libraries/OBLib/MIRF/mirf.c ****     modify, merge, publish, distribute, sublicense, and/or sell copies 
   9:../Libraries/OBLib/MIRF/mirf.c ****     of the Software, and to permit persons to whom the Software is 
  10:../Libraries/OBLib/MIRF/mirf.c ****     furnished to do so, subject to the following conditions:
  11:../Libraries/OBLib/MIRF/mirf.c **** 
  12:../Libraries/OBLib/MIRF/mirf.c ****     The above copyright notice and this permission notice shall be 
  13:../Libraries/OBLib/MIRF/mirf.c ****     included in all copies or substantial portions of the Software.
  14:../Libraries/OBLib/MIRF/mirf.c **** 
  15:../Libraries/OBLib/MIRF/mirf.c ****     THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, 
  16:../Libraries/OBLib/MIRF/mirf.c ****     EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF 
  17:../Libraries/OBLib/MIRF/mirf.c ****     MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND 
  18:../Libraries/OBLib/MIRF/mirf.c ****     NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT 
  19:../Libraries/OBLib/MIRF/mirf.c ****     HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, 
  20:../Libraries/OBLib/MIRF/mirf.c ****     WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, 
  21:../Libraries/OBLib/MIRF/mirf.c ****     OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER 
  22:../Libraries/OBLib/MIRF/mirf.c ****     DEALINGS IN THE SOFTWARE.
  23:../Libraries/OBLib/MIRF/mirf.c **** 
  24:../Libraries/OBLib/MIRF/mirf.c ****     $Id$
  25:../Libraries/OBLib/MIRF/mirf.c **** */
  26:../Libraries/OBLib/MIRF/mirf.c **** /*
  27:../Libraries/OBLib/MIRF/mirf.c ****    Minor update to work with ATmega328P and AVR-GCC 4.8.1 made by Ted
  28:../Libraries/OBLib/MIRF/mirf.c **** */
  29:../Libraries/OBLib/MIRF/mirf.c **** 
  30:../Libraries/OBLib/MIRF/mirf.c **** #include "mirf.h"
  31:../Libraries/OBLib/MIRF/mirf.c **** #include "nRF24L01.h"
  32:../Libraries/OBLib/MIRF/mirf.c **** #include "spi.h"
  33:../Libraries/OBLib/MIRF/mirf.c **** #include <avr/io.h>
  34:../Libraries/OBLib/MIRF/mirf.c **** #include <avr/interrupt.h>
  35:../Libraries/OBLib/MIRF/mirf.c **** 
  36:../Libraries/OBLib/MIRF/mirf.c **** // Defines for setting the MiRF registers for transmitting or receiving mode
  37:../Libraries/OBLib/MIRF/mirf.c **** #define TX_POWERUP mirf_config_register(CONFIG, mirf_CONFIG | ( (1<<PWR_UP) | (0<<PRIM_RX) ) )
  38:../Libraries/OBLib/MIRF/mirf.c **** #define RX_POWERUP mirf_config_register(CONFIG, mirf_CONFIG | ( (1<<PWR_UP) | (1<<PRIM_RX) ) )
  39:../Libraries/OBLib/MIRF/mirf.c **** 
  40:../Libraries/OBLib/MIRF/mirf.c **** 
  41:../Libraries/OBLib/MIRF/mirf.c **** // Flag which denotes transmitting mode
  42:../Libraries/OBLib/MIRF/mirf.c **** volatile uint8_t PTX;
  43:../Libraries/OBLib/MIRF/mirf.c **** 
  44:../Libraries/OBLib/MIRF/mirf.c **** void mirf_init() 
  45:../Libraries/OBLib/MIRF/mirf.c **** // Initializes pins ans interrupt to communicate with the MiRF module
  46:../Libraries/OBLib/MIRF/mirf.c **** // Should be called in the early initializing phase at startup.
  47:../Libraries/OBLib/MIRF/mirf.c **** {
 109               		.stabn	68,0,47,.LM0-.LFBB1
 110               	.LM0:
 111               	.LFBB1:
 112               	/* prologue: function */
 113               	/* frame size = 0 */
 114               	/* stack size = 0 */
 115               	.L__stack_usage = 0
  48:../Libraries/OBLib/MIRF/mirf.c ****     // Define CSN and CE as Output and set them to default
  49:../Libraries/OBLib/MIRF/mirf.c ****     DDRB |= ((1<<CSN)|(1<<CE));
 116               		.stabn	68,0,49,.LM1-.LFBB1
 117               	.LM1:
 118 0000 84B1      		in r24,0x4
 119 0002 8360      		ori r24,lo8(3)
 120 0004 84B9      		out 0x4,r24
  50:../Libraries/OBLib/MIRF/mirf.c ****     mirf_CE_lo;
 121               		.stabn	68,0,50,.LM2-.LFBB1
GAS LISTING /tmp/ccTJ1L45.s 			page 4


 122               	.LM2:
 123 0006 2898      		cbi 0x5,0
  51:../Libraries/OBLib/MIRF/mirf.c ****     mirf_CSN_hi;
 124               		.stabn	68,0,51,.LM3-.LFBB1
 125               	.LM3:
 126 0008 299A      		sbi 0x5,1
  52:../Libraries/OBLib/MIRF/mirf.c **** 
  53:../Libraries/OBLib/MIRF/mirf.c **** #if defined(__AVR_ATmega8__)
  54:../Libraries/OBLib/MIRF/mirf.c ****     // Initialize external interrupt 0 (PD2)
  55:../Libraries/OBLib/MIRF/mirf.c ****     MCUCR = ((1<<ISC11)|(0<<ISC10)|(1<<ISC01)|(0<<ISC00)); // Set external interupt on falling edge
  56:../Libraries/OBLib/MIRF/mirf.c ****     GICR  = ((0<<INT1)|(1<<INT0));                         // Activate INT0
  57:../Libraries/OBLib/MIRF/mirf.c **** #endif // __AVR_ATmega8__
  58:../Libraries/OBLib/MIRF/mirf.c **** 
  59:../Libraries/OBLib/MIRF/mirf.c **** #if defined(__AVR_ATmega168__)
  60:../Libraries/OBLib/MIRF/mirf.c ****     // Initialize external interrupt on port PD6 (PCINT22)
  61:../Libraries/OBLib/MIRF/mirf.c ****     DDRB &= ~(1<<PD6);
  62:../Libraries/OBLib/MIRF/mirf.c ****     PCMSK2 = (1<<PCINT22);
  63:../Libraries/OBLib/MIRF/mirf.c ****     PCICR  = (1<<PCIE2);
  64:../Libraries/OBLib/MIRF/mirf.c **** #endif // __AVR_ATmega168__    
  65:../Libraries/OBLib/MIRF/mirf.c **** 
  66:../Libraries/OBLib/MIRF/mirf.c ****     // Initialize spi module
  67:../Libraries/OBLib/MIRF/mirf.c ****     spi_init();
 127               		.stabn	68,0,67,.LM4-.LFBB1
 128               	.LM4:
 129 000a 0C94 0000 		jmp spi_init
 130               		.size	mirf_init, .-mirf_init
 131               	.Lscope1:
 132               		.stabs	"",36,0,0,.Lscope1-.LFBB1
 133               		.stabd	78,0,0
 134               		.stabs	"mirf_data_ready:F(6,2)",36,0,131,mirf_data_ready
 135               	.global	mirf_data_ready
 136               		.type	mirf_data_ready, @function
 137               	mirf_data_ready:
 138               		.stabd	46,0,0
  68:../Libraries/OBLib/MIRF/mirf.c **** }
  69:../Libraries/OBLib/MIRF/mirf.c **** 
  70:../Libraries/OBLib/MIRF/mirf.c **** 
  71:../Libraries/OBLib/MIRF/mirf.c **** void mirf_config() 
  72:../Libraries/OBLib/MIRF/mirf.c **** // Sets the important registers in the MiRF module and powers the module
  73:../Libraries/OBLib/MIRF/mirf.c **** // in receiving mode
  74:../Libraries/OBLib/MIRF/mirf.c **** {
  75:../Libraries/OBLib/MIRF/mirf.c ****     // Set RF channel
  76:../Libraries/OBLib/MIRF/mirf.c ****     mirf_config_register(RF_CH,mirf_CH);
  77:../Libraries/OBLib/MIRF/mirf.c **** 
  78:../Libraries/OBLib/MIRF/mirf.c ****     // Set length of incoming payload 
  79:../Libraries/OBLib/MIRF/mirf.c ****     mirf_config_register(RX_PW_P0, mirf_PAYLOAD);
  80:../Libraries/OBLib/MIRF/mirf.c **** 
  81:../Libraries/OBLib/MIRF/mirf.c ****     // Start receiver 
  82:../Libraries/OBLib/MIRF/mirf.c ****     PTX = 0;        // Start in receiving mode
  83:../Libraries/OBLib/MIRF/mirf.c ****     RX_POWERUP;     // Power up in receiving mode
  84:../Libraries/OBLib/MIRF/mirf.c ****     mirf_CE_hi;     // Listening for pakets
  85:../Libraries/OBLib/MIRF/mirf.c **** }
  86:../Libraries/OBLib/MIRF/mirf.c **** 
  87:../Libraries/OBLib/MIRF/mirf.c **** void mirf_set_RADDR(uint8_t * adr) 
  88:../Libraries/OBLib/MIRF/mirf.c **** // Sets the receiving address
  89:../Libraries/OBLib/MIRF/mirf.c **** {
  90:../Libraries/OBLib/MIRF/mirf.c ****     mirf_CE_lo;
GAS LISTING /tmp/ccTJ1L45.s 			page 5


  91:../Libraries/OBLib/MIRF/mirf.c ****     mirf_write_register(RX_ADDR_P0,adr,5);
  92:../Libraries/OBLib/MIRF/mirf.c ****     mirf_CE_hi;
  93:../Libraries/OBLib/MIRF/mirf.c **** }
  94:../Libraries/OBLib/MIRF/mirf.c **** 
  95:../Libraries/OBLib/MIRF/mirf.c **** void mirf_set_TADDR(uint8_t * adr)
  96:../Libraries/OBLib/MIRF/mirf.c **** // Sets the transmitting address
  97:../Libraries/OBLib/MIRF/mirf.c **** {
  98:../Libraries/OBLib/MIRF/mirf.c ****     mirf_write_register(TX_ADDR, adr,5);
  99:../Libraries/OBLib/MIRF/mirf.c **** }
 100:../Libraries/OBLib/MIRF/mirf.c **** 
 101:../Libraries/OBLib/MIRF/mirf.c **** #if defined(__AVR_ATmega8__)
 102:../Libraries/OBLib/MIRF/mirf.c **** SIGNAL(SIG_INTERRUPT0) 
 103:../Libraries/OBLib/MIRF/mirf.c **** #endif // __AVR_ATmega8__
 104:../Libraries/OBLib/MIRF/mirf.c **** #if defined(__AVR_ATmega168__)
 105:../Libraries/OBLib/MIRF/mirf.c **** SIGNAL(SIG_PIN_CHANGE2) 
 106:../Libraries/OBLib/MIRF/mirf.c **** #endif // __AVR_ATmega168__  
 107:../Libraries/OBLib/MIRF/mirf.c **** #if defined(__AVR_ATmega328P__)
 108:../Libraries/OBLib/MIRF/mirf.c **** ISR(PCINT2_vect/*SIG_PIN_CHANGE2*/)
 109:../Libraries/OBLib/MIRF/mirf.c **** #endif //__AVR_ATmega328p__
 110:../Libraries/OBLib/MIRF/mirf.c **** // Interrupt handler 
 111:../Libraries/OBLib/MIRF/mirf.c **** {
 112:../Libraries/OBLib/MIRF/mirf.c ****     uint8_t status;   
 113:../Libraries/OBLib/MIRF/mirf.c ****     // If still in transmitting mode then finish transmission
 114:../Libraries/OBLib/MIRF/mirf.c ****     if (PTX) {
 115:../Libraries/OBLib/MIRF/mirf.c ****     
 116:../Libraries/OBLib/MIRF/mirf.c ****         // Read MiRF status 
 117:../Libraries/OBLib/MIRF/mirf.c ****         mirf_CSN_lo;                                // Pull down chip select
 118:../Libraries/OBLib/MIRF/mirf.c ****         status = spi_fast_shift(NOP);               // Read status register
 119:../Libraries/OBLib/MIRF/mirf.c ****         mirf_CSN_hi;                                // Pull up chip select
 120:../Libraries/OBLib/MIRF/mirf.c **** 
 121:../Libraries/OBLib/MIRF/mirf.c ****         mirf_CE_lo;                             // Deactivate transreceiver
 122:../Libraries/OBLib/MIRF/mirf.c ****         RX_POWERUP;                             // Power up in receiving mode
 123:../Libraries/OBLib/MIRF/mirf.c ****         mirf_CE_hi;                             // Listening for pakets
 124:../Libraries/OBLib/MIRF/mirf.c ****         PTX = 0;                                // Set to receiving mode
 125:../Libraries/OBLib/MIRF/mirf.c **** 
 126:../Libraries/OBLib/MIRF/mirf.c ****         // Reset status register for further interaction
 127:../Libraries/OBLib/MIRF/mirf.c ****         mirf_config_register(STATUS,(1<<TX_DS)|(1<<MAX_RT)); // Reset status register
 128:../Libraries/OBLib/MIRF/mirf.c ****     }
 129:../Libraries/OBLib/MIRF/mirf.c **** }
 130:../Libraries/OBLib/MIRF/mirf.c **** 
 131:../Libraries/OBLib/MIRF/mirf.c **** extern uint8_t mirf_data_ready() 
 132:../Libraries/OBLib/MIRF/mirf.c **** // Checks if data is available for reading
 133:../Libraries/OBLib/MIRF/mirf.c **** {
 139               		.stabn	68,0,133,.LM5-.LFBB2
 140               	.LM5:
 141               	.LFBB2:
 142               	/* prologue: function */
 143               	/* frame size = 0 */
 144               	/* stack size = 0 */
 145               	.L__stack_usage = 0
 134:../Libraries/OBLib/MIRF/mirf.c ****     if (PTX) return 0;
 146               		.stabn	68,0,134,.LM6-.LFBB2
 147               	.LM6:
 148 000e 8091 0000 		lds r24,PTX
 149 0012 8111      		cpse r24,__zero_reg__
 150 0014 00C0      		rjmp .L4
 135:../Libraries/OBLib/MIRF/mirf.c ****     uint8_t status;
GAS LISTING /tmp/ccTJ1L45.s 			page 6


 136:../Libraries/OBLib/MIRF/mirf.c ****     // Read MiRF status 
 137:../Libraries/OBLib/MIRF/mirf.c ****     mirf_CSN_lo;                                // Pull down chip select
 151               		.stabn	68,0,137,.LM7-.LFBB2
 152               	.LM7:
 153 0016 2998      		cbi 0x5,1
 138:../Libraries/OBLib/MIRF/mirf.c ****     status = spi_fast_shift(NOP);               // Read status register
 154               		.stabn	68,0,138,.LM8-.LFBB2
 155               	.LM8:
 156 0018 8FEF      		ldi r24,lo8(-1)
 157 001a 0E94 0000 		call spi_fast_shift
 139:../Libraries/OBLib/MIRF/mirf.c ****     mirf_CSN_hi;                                // Pull up chip select
 158               		.stabn	68,0,139,.LM9-.LFBB2
 159               	.LM9:
 160 001e 299A      		sbi 0x5,1
 140:../Libraries/OBLib/MIRF/mirf.c ****     return status & (1<<RX_DR);
 161               		.stabn	68,0,140,.LM10-.LFBB2
 162               	.LM10:
 163 0020 8074      		andi r24,lo8(64)
 164 0022 0895      		ret
 165               	.L4:
 134:../Libraries/OBLib/MIRF/mirf.c ****     uint8_t status;
 166               		.stabn	68,0,134,.LM11-.LFBB2
 167               	.LM11:
 168 0024 80E0      		ldi r24,0
 141:../Libraries/OBLib/MIRF/mirf.c **** }
 169               		.stabn	68,0,141,.LM12-.LFBB2
 170               	.LM12:
 171 0026 0895      		ret
 172               		.size	mirf_data_ready, .-mirf_data_ready
 173               	.Lscope2:
 174               		.stabs	"",36,0,0,.Lscope2-.LFBB2
 175               		.stabd	78,0,0
 176               		.stabs	"mirf_config_register:F(0,47)",36,0,153,mirf_config_register
 177               		.stabs	"reg:P(6,2)",64,0,153,24
 178               		.stabs	"value:P(6,2)",64,0,153,22
 179               	.global	mirf_config_register
 180               		.type	mirf_config_register, @function
 181               	mirf_config_register:
 182               		.stabd	46,0,0
 142:../Libraries/OBLib/MIRF/mirf.c **** 
 143:../Libraries/OBLib/MIRF/mirf.c **** extern void mirf_get_data(uint8_t * data) 
 144:../Libraries/OBLib/MIRF/mirf.c **** // Reads mirf_PAYLOAD bytes into data array
 145:../Libraries/OBLib/MIRF/mirf.c **** {
 146:../Libraries/OBLib/MIRF/mirf.c ****     mirf_CSN_lo;                               // Pull down chip select
 147:../Libraries/OBLib/MIRF/mirf.c ****     spi_fast_shift( R_RX_PAYLOAD );            // Send cmd to read rx payload
 148:../Libraries/OBLib/MIRF/mirf.c ****     spi_transfer_sync(data,data,mirf_PAYLOAD); // Read payload
 149:../Libraries/OBLib/MIRF/mirf.c ****     mirf_CSN_hi;                               // Pull up chip select
 150:../Libraries/OBLib/MIRF/mirf.c ****     mirf_config_register(STATUS,(1<<RX_DR));   // Reset status register
 151:../Libraries/OBLib/MIRF/mirf.c **** }
 152:../Libraries/OBLib/MIRF/mirf.c **** 
 153:../Libraries/OBLib/MIRF/mirf.c **** void mirf_config_register(uint8_t reg, uint8_t value)
 154:../Libraries/OBLib/MIRF/mirf.c **** // Clocks only one byte into the given MiRF register
 155:../Libraries/OBLib/MIRF/mirf.c **** {
 183               		.stabn	68,0,155,.LM13-.LFBB3
 184               	.LM13:
 185               	.LFBB3:
 186 0028 CF93      		push r28
GAS LISTING /tmp/ccTJ1L45.s 			page 7


 187 002a DF93      		push r29
 188 002c 1F92      		push __zero_reg__
 189 002e CDB7      		in r28,__SP_L__
 190 0030 DEB7      		in r29,__SP_H__
 191               	/* prologue: function */
 192               	/* frame size = 1 */
 193               	/* stack size = 3 */
 194               	.L__stack_usage = 3
 156:../Libraries/OBLib/MIRF/mirf.c ****     mirf_CSN_lo;
 195               		.stabn	68,0,156,.LM14-.LFBB3
 196               	.LM14:
 197 0032 2998      		cbi 0x5,1
 157:../Libraries/OBLib/MIRF/mirf.c ****     spi_fast_shift(W_REGISTER | (REGISTER_MASK & reg));
 198               		.stabn	68,0,157,.LM15-.LFBB3
 199               	.LM15:
 200 0034 8F71      		andi r24,lo8(31)
 201 0036 8062      		ori r24,lo8(32)
 202 0038 6983      		std Y+1,r22
 203 003a 0E94 0000 		call spi_fast_shift
 158:../Libraries/OBLib/MIRF/mirf.c ****     spi_fast_shift(value);
 204               		.stabn	68,0,158,.LM16-.LFBB3
 205               	.LM16:
 206 003e 6981      		ldd r22,Y+1
 207 0040 862F      		mov r24,r22
 208 0042 0E94 0000 		call spi_fast_shift
 159:../Libraries/OBLib/MIRF/mirf.c ****     mirf_CSN_hi;
 209               		.stabn	68,0,159,.LM17-.LFBB3
 210               	.LM17:
 211 0046 299A      		sbi 0x5,1
 212               	/* epilogue start */
 160:../Libraries/OBLib/MIRF/mirf.c **** }
 213               		.stabn	68,0,160,.LM18-.LFBB3
 214               	.LM18:
 215 0048 0F90      		pop __tmp_reg__
 216 004a DF91      		pop r29
 217 004c CF91      		pop r28
 218 004e 0895      		ret
 219               		.size	mirf_config_register, .-mirf_config_register
 220               	.Lscope3:
 221               		.stabs	"",36,0,0,.Lscope3-.LFBB3
 222               		.stabd	78,0,0
 223               		.stabs	"mirf_config:F(0,47)",36,0,71,mirf_config
 224               	.global	mirf_config
 225               		.type	mirf_config, @function
 226               	mirf_config:
 227               		.stabd	46,0,0
  74:../Libraries/OBLib/MIRF/mirf.c ****     // Set RF channel
 228               		.stabn	68,0,74,.LM19-.LFBB4
 229               	.LM19:
 230               	.LFBB4:
 231               	/* prologue: function */
 232               	/* frame size = 0 */
 233               	/* stack size = 0 */
 234               	.L__stack_usage = 0
  76:../Libraries/OBLib/MIRF/mirf.c **** 
 235               		.stabn	68,0,76,.LM20-.LFBB4
 236               	.LM20:
GAS LISTING /tmp/ccTJ1L45.s 			page 8


 237 0050 62E0      		ldi r22,lo8(2)
 238 0052 85E0      		ldi r24,lo8(5)
 239 0054 0E94 0000 		call mirf_config_register
  79:../Libraries/OBLib/MIRF/mirf.c **** 
 240               		.stabn	68,0,79,.LM21-.LFBB4
 241               	.LM21:
 242 0058 60E1      		ldi r22,lo8(16)
 243 005a 81E1      		ldi r24,lo8(17)
 244 005c 0E94 0000 		call mirf_config_register
  82:../Libraries/OBLib/MIRF/mirf.c ****     RX_POWERUP;     // Power up in receiving mode
 245               		.stabn	68,0,82,.LM22-.LFBB4
 246               	.LM22:
 247 0060 1092 0000 		sts PTX,__zero_reg__
  83:../Libraries/OBLib/MIRF/mirf.c ****     mirf_CE_hi;     // Listening for pakets
 248               		.stabn	68,0,83,.LM23-.LFBB4
 249               	.LM23:
 250 0064 6BE4      		ldi r22,lo8(75)
 251 0066 80E0      		ldi r24,0
 252 0068 0E94 0000 		call mirf_config_register
  84:../Libraries/OBLib/MIRF/mirf.c **** }
 253               		.stabn	68,0,84,.LM24-.LFBB4
 254               	.LM24:
 255 006c 289A      		sbi 0x5,0
 256 006e 0895      		ret
 257               		.size	mirf_config, .-mirf_config
 258               	.Lscope4:
 259               		.stabs	"",36,0,0,.Lscope4-.LFBB4
 260               		.stabd	78,0,0
 261               		.stabs	"__vector_5:F(0,47)",36,0,108,__vector_5
 262               	.global	__vector_5
 263               		.type	__vector_5, @function
 264               	__vector_5:
 265               		.stabd	46,0,0
 111:../Libraries/OBLib/MIRF/mirf.c ****     uint8_t status;   
 266               		.stabn	68,0,111,.LM25-.LFBB5
 267               	.LM25:
 268               	.LFBB5:
 269 0070 1F92      		push r1
 270 0072 0F92      		push r0
 271 0074 0FB6      		in r0,__SREG__
 272 0076 0F92      		push r0
 273 0078 1124      		clr __zero_reg__
 274 007a 2F93      		push r18
 275 007c 3F93      		push r19
 276 007e 4F93      		push r20
 277 0080 5F93      		push r21
 278 0082 6F93      		push r22
 279 0084 7F93      		push r23
 280 0086 8F93      		push r24
 281 0088 9F93      		push r25
 282 008a AF93      		push r26
 283 008c BF93      		push r27
 284 008e EF93      		push r30
 285 0090 FF93      		push r31
 286               	/* prologue: Signal */
 287               	/* frame size = 0 */
 288               	/* stack size = 15 */
GAS LISTING /tmp/ccTJ1L45.s 			page 9


 289               	.L__stack_usage = 15
 114:../Libraries/OBLib/MIRF/mirf.c ****     
 290               		.stabn	68,0,114,.LM26-.LFBB5
 291               	.LM26:
 292 0092 8091 0000 		lds r24,PTX
 293 0096 8823      		tst r24
 294 0098 01F0      		breq .L8
 117:../Libraries/OBLib/MIRF/mirf.c ****         status = spi_fast_shift(NOP);               // Read status register
 295               		.stabn	68,0,117,.LM27-.LFBB5
 296               	.LM27:
 297 009a 2998      		cbi 0x5,1
 118:../Libraries/OBLib/MIRF/mirf.c ****         mirf_CSN_hi;                                // Pull up chip select
 298               		.stabn	68,0,118,.LM28-.LFBB5
 299               	.LM28:
 300 009c 8FEF      		ldi r24,lo8(-1)
 301 009e 0E94 0000 		call spi_fast_shift
 119:../Libraries/OBLib/MIRF/mirf.c **** 
 302               		.stabn	68,0,119,.LM29-.LFBB5
 303               	.LM29:
 304 00a2 299A      		sbi 0x5,1
 121:../Libraries/OBLib/MIRF/mirf.c ****         RX_POWERUP;                             // Power up in receiving mode
 305               		.stabn	68,0,121,.LM30-.LFBB5
 306               	.LM30:
 307 00a4 2898      		cbi 0x5,0
 122:../Libraries/OBLib/MIRF/mirf.c ****         mirf_CE_hi;                             // Listening for pakets
 308               		.stabn	68,0,122,.LM31-.LFBB5
 309               	.LM31:
 310 00a6 6BE4      		ldi r22,lo8(75)
 311 00a8 80E0      		ldi r24,0
 312 00aa 0E94 0000 		call mirf_config_register
 123:../Libraries/OBLib/MIRF/mirf.c ****         PTX = 0;                                // Set to receiving mode
 313               		.stabn	68,0,123,.LM32-.LFBB5
 314               	.LM32:
 315 00ae 289A      		sbi 0x5,0
 124:../Libraries/OBLib/MIRF/mirf.c **** 
 316               		.stabn	68,0,124,.LM33-.LFBB5
 317               	.LM33:
 318 00b0 1092 0000 		sts PTX,__zero_reg__
 127:../Libraries/OBLib/MIRF/mirf.c ****     }
 319               		.stabn	68,0,127,.LM34-.LFBB5
 320               	.LM34:
 321 00b4 60E3      		ldi r22,lo8(48)
 322 00b6 87E0      		ldi r24,lo8(7)
 323 00b8 0E94 0000 		call mirf_config_register
 324               	.L8:
 325               	/* epilogue start */
 129:../Libraries/OBLib/MIRF/mirf.c **** 
 326               		.stabn	68,0,129,.LM35-.LFBB5
 327               	.LM35:
 328 00bc FF91      		pop r31
 329 00be EF91      		pop r30
 330 00c0 BF91      		pop r27
 331 00c2 AF91      		pop r26
 332 00c4 9F91      		pop r25
 333 00c6 8F91      		pop r24
 334 00c8 7F91      		pop r23
 335 00ca 6F91      		pop r22
GAS LISTING /tmp/ccTJ1L45.s 			page 10


 336 00cc 5F91      		pop r21
 337 00ce 4F91      		pop r20
 338 00d0 3F91      		pop r19
 339 00d2 2F91      		pop r18
 340 00d4 0F90      		pop r0
 341 00d6 0FBE      		out __SREG__,r0
 342 00d8 0F90      		pop r0
 343 00da 1F90      		pop r1
 344 00dc 1895      		reti
 345               		.size	__vector_5, .-__vector_5
 346               	.Lscope5:
 347               		.stabs	"",36,0,0,.Lscope5-.LFBB5
 348               		.stabd	78,0,0
 349               		.stabs	"mirf_get_data:F(0,47)",36,0,143,mirf_get_data
 350               		.stabs	"data:P(0,48)=*(6,2)",64,0,143,28
 351               	.global	mirf_get_data
 352               		.type	mirf_get_data, @function
 353               	mirf_get_data:
 354               		.stabd	46,0,0
 145:../Libraries/OBLib/MIRF/mirf.c ****     mirf_CSN_lo;                               // Pull down chip select
 355               		.stabn	68,0,145,.LM36-.LFBB6
 356               	.LM36:
 357               	.LFBB6:
 358 00de CF93      		push r28
 359 00e0 DF93      		push r29
 360               	/* prologue: function */
 361               	/* frame size = 0 */
 362               	/* stack size = 2 */
 363               	.L__stack_usage = 2
 364 00e2 EC01      		movw r28,r24
 146:../Libraries/OBLib/MIRF/mirf.c ****     spi_fast_shift( R_RX_PAYLOAD );            // Send cmd to read rx payload
 365               		.stabn	68,0,146,.LM37-.LFBB6
 366               	.LM37:
 367 00e4 2998      		cbi 0x5,1
 147:../Libraries/OBLib/MIRF/mirf.c ****     spi_transfer_sync(data,data,mirf_PAYLOAD); // Read payload
 368               		.stabn	68,0,147,.LM38-.LFBB6
 369               	.LM38:
 370 00e6 81E6      		ldi r24,lo8(97)
 371 00e8 0E94 0000 		call spi_fast_shift
 148:../Libraries/OBLib/MIRF/mirf.c ****     mirf_CSN_hi;                               // Pull up chip select
 372               		.stabn	68,0,148,.LM39-.LFBB6
 373               	.LM39:
 374 00ec 40E1      		ldi r20,lo8(16)
 375 00ee BE01      		movw r22,r28
 376 00f0 CE01      		movw r24,r28
 377 00f2 0E94 0000 		call spi_transfer_sync
 149:../Libraries/OBLib/MIRF/mirf.c ****     mirf_config_register(STATUS,(1<<RX_DR));   // Reset status register
 378               		.stabn	68,0,149,.LM40-.LFBB6
 379               	.LM40:
 380 00f6 299A      		sbi 0x5,1
 150:../Libraries/OBLib/MIRF/mirf.c **** }
 381               		.stabn	68,0,150,.LM41-.LFBB6
 382               	.LM41:
 383 00f8 60E4      		ldi r22,lo8(64)
 384 00fa 87E0      		ldi r24,lo8(7)
 385               	/* epilogue start */
 151:../Libraries/OBLib/MIRF/mirf.c **** 
GAS LISTING /tmp/ccTJ1L45.s 			page 11


 386               		.stabn	68,0,151,.LM42-.LFBB6
 387               	.LM42:
 388 00fc DF91      		pop r29
 389 00fe CF91      		pop r28
 150:../Libraries/OBLib/MIRF/mirf.c **** }
 390               		.stabn	68,0,150,.LM43-.LFBB6
 391               	.LM43:
 392 0100 0C94 0000 		jmp mirf_config_register
 393               		.size	mirf_get_data, .-mirf_get_data
 394               	.Lscope6:
 395               		.stabs	"",36,0,0,.Lscope6-.LFBB6
 396               		.stabd	78,0,0
 397               		.stabs	"mirf_read_register:F(0,47)",36,0,162,mirf_read_register
 398               		.stabs	"reg:P(6,2)",64,0,162,24
 399               		.stabs	"value:P(0,48)",64,0,162,16
 400               		.stabs	"len:P(6,2)",64,0,162,20
 401               	.global	mirf_read_register
 402               		.type	mirf_read_register, @function
 403               	mirf_read_register:
 404               		.stabd	46,0,0
 161:../Libraries/OBLib/MIRF/mirf.c **** 
 162:../Libraries/OBLib/MIRF/mirf.c **** void mirf_read_register(uint8_t reg, uint8_t * value, uint8_t len)
 163:../Libraries/OBLib/MIRF/mirf.c **** // Reads an array of bytes from the given start position in the MiRF registers.
 164:../Libraries/OBLib/MIRF/mirf.c **** {
 405               		.stabn	68,0,164,.LM44-.LFBB7
 406               	.LM44:
 407               	.LFBB7:
 408 0104 0F93      		push r16
 409 0106 1F93      		push r17
 410 0108 CF93      		push r28
 411 010a DF93      		push r29
 412 010c 1F92      		push __zero_reg__
 413 010e CDB7      		in r28,__SP_L__
 414 0110 DEB7      		in r29,__SP_H__
 415               	/* prologue: function */
 416               	/* frame size = 1 */
 417               	/* stack size = 5 */
 418               	.L__stack_usage = 5
 419 0112 8B01      		movw r16,r22
 165:../Libraries/OBLib/MIRF/mirf.c ****     mirf_CSN_lo;
 420               		.stabn	68,0,165,.LM45-.LFBB7
 421               	.LM45:
 422 0114 2998      		cbi 0x5,1
 166:../Libraries/OBLib/MIRF/mirf.c ****     spi_fast_shift(R_REGISTER | (REGISTER_MASK & reg));
 423               		.stabn	68,0,166,.LM46-.LFBB7
 424               	.LM46:
 425 0116 8F71      		andi r24,lo8(31)
 426 0118 4983      		std Y+1,r20
 427 011a 0E94 0000 		call spi_fast_shift
 167:../Libraries/OBLib/MIRF/mirf.c ****     spi_transfer_sync(value,value,len);
 428               		.stabn	68,0,167,.LM47-.LFBB7
 429               	.LM47:
 430 011e 4981      		ldd r20,Y+1
 431 0120 B801      		movw r22,r16
 432 0122 C801      		movw r24,r16
 433 0124 0E94 0000 		call spi_transfer_sync
 168:../Libraries/OBLib/MIRF/mirf.c ****     mirf_CSN_hi;
GAS LISTING /tmp/ccTJ1L45.s 			page 12


 434               		.stabn	68,0,168,.LM48-.LFBB7
 435               	.LM48:
 436 0128 299A      		sbi 0x5,1
 437               	/* epilogue start */
 169:../Libraries/OBLib/MIRF/mirf.c **** }
 438               		.stabn	68,0,169,.LM49-.LFBB7
 439               	.LM49:
 440 012a 0F90      		pop __tmp_reg__
 441 012c DF91      		pop r29
 442 012e CF91      		pop r28
 443 0130 1F91      		pop r17
 444 0132 0F91      		pop r16
 445 0134 0895      		ret
 446               		.size	mirf_read_register, .-mirf_read_register
 447               	.Lscope7:
 448               		.stabs	"",36,0,0,.Lscope7-.LFBB7
 449               		.stabd	78,0,0
 450               		.stabs	"mirf_write_register:F(0,47)",36,0,171,mirf_write_register
 451               		.stabs	"reg:P(6,2)",64,0,171,24
 452               		.stabs	"value:P(0,48)",64,0,171,16
 453               		.stabs	"len:P(6,2)",64,0,171,20
 454               	.global	mirf_write_register
 455               		.type	mirf_write_register, @function
 456               	mirf_write_register:
 457               		.stabd	46,0,0
 170:../Libraries/OBLib/MIRF/mirf.c **** 
 171:../Libraries/OBLib/MIRF/mirf.c **** void mirf_write_register(uint8_t reg, uint8_t * value, uint8_t len) 
 172:../Libraries/OBLib/MIRF/mirf.c **** // Writes an array of bytes into inte the MiRF registers.
 173:../Libraries/OBLib/MIRF/mirf.c **** {
 458               		.stabn	68,0,173,.LM50-.LFBB8
 459               	.LM50:
 460               	.LFBB8:
 461 0136 0F93      		push r16
 462 0138 1F93      		push r17
 463 013a CF93      		push r28
 464 013c DF93      		push r29
 465 013e 1F92      		push __zero_reg__
 466 0140 CDB7      		in r28,__SP_L__
 467 0142 DEB7      		in r29,__SP_H__
 468               	/* prologue: function */
 469               	/* frame size = 1 */
 470               	/* stack size = 5 */
 471               	.L__stack_usage = 5
 472 0144 8B01      		movw r16,r22
 174:../Libraries/OBLib/MIRF/mirf.c ****     mirf_CSN_lo;
 473               		.stabn	68,0,174,.LM51-.LFBB8
 474               	.LM51:
 475 0146 2998      		cbi 0x5,1
 175:../Libraries/OBLib/MIRF/mirf.c ****     spi_fast_shift(W_REGISTER | (REGISTER_MASK & reg));
 476               		.stabn	68,0,175,.LM52-.LFBB8
 477               	.LM52:
 478 0148 8F71      		andi r24,lo8(31)
 479 014a 8062      		ori r24,lo8(32)
 480 014c 4983      		std Y+1,r20
 481 014e 0E94 0000 		call spi_fast_shift
 176:../Libraries/OBLib/MIRF/mirf.c ****     spi_transmit_sync(value,len);
 482               		.stabn	68,0,176,.LM53-.LFBB8
GAS LISTING /tmp/ccTJ1L45.s 			page 13


 483               	.LM53:
 484 0152 4981      		ldd r20,Y+1
 485 0154 642F      		mov r22,r20
 486 0156 C801      		movw r24,r16
 487 0158 0E94 0000 		call spi_transmit_sync
 177:../Libraries/OBLib/MIRF/mirf.c ****     mirf_CSN_hi;
 488               		.stabn	68,0,177,.LM54-.LFBB8
 489               	.LM54:
 490 015c 299A      		sbi 0x5,1
 491               	/* epilogue start */
 178:../Libraries/OBLib/MIRF/mirf.c **** }
 492               		.stabn	68,0,178,.LM55-.LFBB8
 493               	.LM55:
 494 015e 0F90      		pop __tmp_reg__
 495 0160 DF91      		pop r29
 496 0162 CF91      		pop r28
 497 0164 1F91      		pop r17
 498 0166 0F91      		pop r16
 499 0168 0895      		ret
 500               		.size	mirf_write_register, .-mirf_write_register
 501               	.Lscope8:
 502               		.stabs	"",36,0,0,.Lscope8-.LFBB8
 503               		.stabd	78,0,0
 504               		.stabs	"mirf_set_RADDR:F(0,47)",36,0,87,mirf_set_RADDR
 505               		.stabs	"adr:P(0,48)",64,0,87,24
 506               	.global	mirf_set_RADDR
 507               		.type	mirf_set_RADDR, @function
 508               	mirf_set_RADDR:
 509               		.stabd	46,0,0
  89:../Libraries/OBLib/MIRF/mirf.c ****     mirf_CE_lo;
 510               		.stabn	68,0,89,.LM56-.LFBB9
 511               	.LM56:
 512               	.LFBB9:
 513               	/* prologue: function */
 514               	/* frame size = 0 */
 515               	/* stack size = 0 */
 516               	.L__stack_usage = 0
  90:../Libraries/OBLib/MIRF/mirf.c ****     mirf_write_register(RX_ADDR_P0,adr,5);
 517               		.stabn	68,0,90,.LM57-.LFBB9
 518               	.LM57:
 519 016a 2898      		cbi 0x5,0
  91:../Libraries/OBLib/MIRF/mirf.c ****     mirf_CE_hi;
 520               		.stabn	68,0,91,.LM58-.LFBB9
 521               	.LM58:
 522 016c 45E0      		ldi r20,lo8(5)
 523 016e BC01      		movw r22,r24
 524 0170 8AE0      		ldi r24,lo8(10)
 525 0172 0E94 0000 		call mirf_write_register
  92:../Libraries/OBLib/MIRF/mirf.c **** }
 526               		.stabn	68,0,92,.LM59-.LFBB9
 527               	.LM59:
 528 0176 289A      		sbi 0x5,0
 529 0178 0895      		ret
 530               		.size	mirf_set_RADDR, .-mirf_set_RADDR
 531               	.Lscope9:
 532               		.stabs	"",36,0,0,.Lscope9-.LFBB9
 533               		.stabd	78,0,0
GAS LISTING /tmp/ccTJ1L45.s 			page 14


 534               		.stabs	"mirf_set_TADDR:F(0,47)",36,0,95,mirf_set_TADDR
 535               		.stabs	"adr:P(0,48)",64,0,95,24
 536               	.global	mirf_set_TADDR
 537               		.type	mirf_set_TADDR, @function
 538               	mirf_set_TADDR:
 539               		.stabd	46,0,0
  97:../Libraries/OBLib/MIRF/mirf.c ****     mirf_write_register(TX_ADDR, adr,5);
 540               		.stabn	68,0,97,.LM60-.LFBB10
 541               	.LM60:
 542               	.LFBB10:
 543               	/* prologue: function */
 544               	/* frame size = 0 */
 545               	/* stack size = 0 */
 546               	.L__stack_usage = 0
  98:../Libraries/OBLib/MIRF/mirf.c **** }
 547               		.stabn	68,0,98,.LM61-.LFBB10
 548               	.LM61:
 549 017a 45E0      		ldi r20,lo8(5)
 550 017c BC01      		movw r22,r24
 551 017e 80E1      		ldi r24,lo8(16)
 552 0180 0C94 0000 		jmp mirf_write_register
 553               		.size	mirf_set_TADDR, .-mirf_set_TADDR
 554               	.Lscope10:
 555               		.stabs	"",36,0,0,.Lscope10-.LFBB10
 556               		.stabd	78,0,0
 557               		.stabs	"mirf_send:F(0,47)",36,0,181,mirf_send
 558               		.stabs	"value:P(0,48)",64,0,181,28
 559               		.stabs	"len:P(6,2)",64,0,181,17
 560               	.global	mirf_send
 561               		.type	mirf_send, @function
 562               	mirf_send:
 563               		.stabd	46,0,0
 179:../Libraries/OBLib/MIRF/mirf.c **** 
 180:../Libraries/OBLib/MIRF/mirf.c **** 
 181:../Libraries/OBLib/MIRF/mirf.c **** void mirf_send(uint8_t * value, uint8_t len) 
 182:../Libraries/OBLib/MIRF/mirf.c **** // Sends a data package to the default address. Be sure to send the correct
 183:../Libraries/OBLib/MIRF/mirf.c **** // amount of bytes as configured as payload on the receiver.
 184:../Libraries/OBLib/MIRF/mirf.c **** {
 564               		.stabn	68,0,184,.LM62-.LFBB11
 565               	.LM62:
 566               	.LFBB11:
 567 0184 1F93      		push r17
 568 0186 CF93      		push r28
 569 0188 DF93      		push r29
 570               	/* prologue: function */
 571               	/* frame size = 0 */
 572               	/* stack size = 3 */
 573               	.L__stack_usage = 3
 574 018a EC01      		movw r28,r24
 575 018c 162F      		mov r17,r22
 576               	.L20:
 185:../Libraries/OBLib/MIRF/mirf.c ****     while (PTX) {}                  // Wait until last paket is send
 577               		.stabn	68,0,185,.LM63-.LFBB11
 578               	.LM63:
 579 018e 8091 0000 		lds r24,PTX
 580 0192 8111      		cpse r24,__zero_reg__
 581 0194 00C0      		rjmp .L20
GAS LISTING /tmp/ccTJ1L45.s 			page 15


 186:../Libraries/OBLib/MIRF/mirf.c **** 
 187:../Libraries/OBLib/MIRF/mirf.c ****     mirf_CE_lo;
 582               		.stabn	68,0,187,.LM64-.LFBB11
 583               	.LM64:
 584 0196 2898      		cbi 0x5,0
 188:../Libraries/OBLib/MIRF/mirf.c **** 
 189:../Libraries/OBLib/MIRF/mirf.c ****     PTX = 1;                        // Set to transmitter mode
 585               		.stabn	68,0,189,.LM65-.LFBB11
 586               	.LM65:
 587 0198 81E0      		ldi r24,lo8(1)
 588 019a 8093 0000 		sts PTX,r24
 190:../Libraries/OBLib/MIRF/mirf.c ****     TX_POWERUP;                     // Power up
 589               		.stabn	68,0,190,.LM66-.LFBB11
 590               	.LM66:
 591 019e 6AE4      		ldi r22,lo8(74)
 592 01a0 80E0      		ldi r24,0
 593 01a2 0E94 0000 		call mirf_config_register
 191:../Libraries/OBLib/MIRF/mirf.c ****     
 192:../Libraries/OBLib/MIRF/mirf.c ****     mirf_CSN_lo;                    // Pull down chip select
 594               		.stabn	68,0,192,.LM67-.LFBB11
 595               	.LM67:
 596 01a6 2998      		cbi 0x5,1
 193:../Libraries/OBLib/MIRF/mirf.c ****     spi_fast_shift( FLUSH_TX );     // Write cmd to flush tx fifo
 597               		.stabn	68,0,193,.LM68-.LFBB11
 598               	.LM68:
 599 01a8 81EE      		ldi r24,lo8(-31)
 600 01aa 0E94 0000 		call spi_fast_shift
 194:../Libraries/OBLib/MIRF/mirf.c ****     mirf_CSN_hi;                    // Pull up chip select
 601               		.stabn	68,0,194,.LM69-.LFBB11
 602               	.LM69:
 603 01ae 299A      		sbi 0x5,1
 195:../Libraries/OBLib/MIRF/mirf.c ****     
 196:../Libraries/OBLib/MIRF/mirf.c ****     mirf_CSN_lo;                    // Pull down chip select
 604               		.stabn	68,0,196,.LM70-.LFBB11
 605               	.LM70:
 606 01b0 2998      		cbi 0x5,1
 197:../Libraries/OBLib/MIRF/mirf.c ****     spi_fast_shift( W_TX_PAYLOAD ); // Write cmd to write payload
 607               		.stabn	68,0,197,.LM71-.LFBB11
 608               	.LM71:
 609 01b2 80EA      		ldi r24,lo8(-96)
 610 01b4 0E94 0000 		call spi_fast_shift
 198:../Libraries/OBLib/MIRF/mirf.c ****     spi_transmit_sync(value,len);   // Write payload
 611               		.stabn	68,0,198,.LM72-.LFBB11
 612               	.LM72:
 613 01b8 612F      		mov r22,r17
 614 01ba CE01      		movw r24,r28
 615 01bc 0E94 0000 		call spi_transmit_sync
 199:../Libraries/OBLib/MIRF/mirf.c ****     mirf_CSN_hi;                    // Pull up chip select
 616               		.stabn	68,0,199,.LM73-.LFBB11
 617               	.LM73:
 618 01c0 299A      		sbi 0x5,1
 200:../Libraries/OBLib/MIRF/mirf.c ****     
 201:../Libraries/OBLib/MIRF/mirf.c ****     mirf_CE_hi;                     // Start transmission
 619               		.stabn	68,0,201,.LM74-.LFBB11
 620               	.LM74:
 621 01c2 289A      		sbi 0x5,0
 622               	/* epilogue start */
GAS LISTING /tmp/ccTJ1L45.s 			page 16


 202:../Libraries/OBLib/MIRF/mirf.c **** }
 623               		.stabn	68,0,202,.LM75-.LFBB11
 624               	.LM75:
 625 01c4 DF91      		pop r29
 626 01c6 CF91      		pop r28
 627 01c8 1F91      		pop r17
 628 01ca 0895      		ret
 629               		.size	mirf_send, .-mirf_send
 630               	.Lscope11:
 631               		.stabs	"",36,0,0,.Lscope11-.LFBB11
 632               		.stabd	78,0,0
 633               		.comm	PTX,1,1
 634               		.stabs	"PTX:G(0,49)=B(6,2)",32,0,42,0
 635               		.stabs	"",100,0,0,.Letext0
 636               	.Letext0:
 637               		.ident	"GCC: (GNU) 4.8.1"
 638               	.global __do_clear_bss
GAS LISTING /tmp/ccTJ1L45.s 			page 17


DEFINED SYMBOLS
                            *ABS*:0000000000000000 mirf.c
     /tmp/ccTJ1L45.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccTJ1L45.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccTJ1L45.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccTJ1L45.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccTJ1L45.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccTJ1L45.s:107    .text:0000000000000000 mirf_init
     /tmp/ccTJ1L45.s:137    .text:000000000000000e mirf_data_ready
                            *COM*:0000000000000001 PTX
     /tmp/ccTJ1L45.s:181    .text:0000000000000028 mirf_config_register
     /tmp/ccTJ1L45.s:226    .text:0000000000000050 mirf_config
     /tmp/ccTJ1L45.s:264    .text:0000000000000070 __vector_5
     /tmp/ccTJ1L45.s:353    .text:00000000000000de mirf_get_data
     /tmp/ccTJ1L45.s:403    .text:0000000000000104 mirf_read_register
     /tmp/ccTJ1L45.s:456    .text:0000000000000136 mirf_write_register
     /tmp/ccTJ1L45.s:508    .text:000000000000016a mirf_set_RADDR
     /tmp/ccTJ1L45.s:538    .text:000000000000017a mirf_set_TADDR
     /tmp/ccTJ1L45.s:562    .text:0000000000000184 mirf_send

UNDEFINED SYMBOLS
spi_init
spi_fast_shift
spi_transfer_sync
spi_transmit_sync
__do_clear_bss
