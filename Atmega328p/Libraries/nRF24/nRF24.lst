GAS LISTING /tmp/ccfeiFgI.s 			page 1


   1               		.file	"nRF24.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.stabs	"/home/edward/Microcontroller/Atmega328p/MiniCopter/Copter/",100,0,2,.Ltext0
   8               		.stabs	"../../Libraries/nRF24/nRF24.c",100,0,2,.Ltext0
   9               		.text
  10               	.Ltext0:
  11               		.stabs	"gcc2_compiled.",60,0,0,0
  12               		.stabs	"int:t(0,1)=r(0,1);-32768;32767;",128,0,0,0
  13               		.stabs	"char:t(0,2)=@s8;r(0,2);0;255;",128,0,0,0
  14               		.stabs	"long int:t(0,3)=@s32;r(0,3);020000000000;017777777777;",128,0,0,0
  15               		.stabs	"unsigned int:t(0,4)=r(0,4);0;0177777;",128,0,0,0
  16               		.stabs	"long unsigned int:t(0,5)=@s32;r(0,5);0;037777777777;",128,0,0,0
  17               		.stabs	"long long int:t(0,6)=@s64;r(0,6);01000000000000000000000;0777777777777777777777;",128,0,0,
  18               		.stabs	"long long unsigned int:t(0,7)=@s64;r(0,7);0;01777777777777777777777;",128,0,0,0
  19               		.stabs	"short int:t(0,8)=r(0,8);-32768;32767;",128,0,0,0
  20               		.stabs	"short unsigned int:t(0,9)=r(0,9);0;0177777;",128,0,0,0
  21               		.stabs	"signed char:t(0,10)=@s8;r(0,10);-128;127;",128,0,0,0
  22               		.stabs	"unsigned char:t(0,11)=@s8;r(0,11);0;255;",128,0,0,0
  23               		.stabs	"float:t(0,12)=r(0,1);4;0;",128,0,0,0
  24               		.stabs	"double:t(0,13)=r(0,1);4;0;",128,0,0,0
  25               		.stabs	"long double:t(0,14)=r(0,1);4;0;",128,0,0,0
  26               		.stabs	"short _Fract:t(0,15)=r(0,1);1;0;",128,0,0,0
  27               		.stabs	"_Fract:t(0,16)=r(0,1);2;0;",128,0,0,0
  28               		.stabs	"long _Fract:t(0,17)=r(0,1);4;0;",128,0,0,0
  29               		.stabs	"long long _Fract:t(0,18)=r(0,1);8;0;",128,0,0,0
  30               		.stabs	"unsigned short _Fract:t(0,19)=r(0,1);1;0;",128,0,0,0
  31               		.stabs	"unsigned _Fract:t(0,20)=r(0,1);2;0;",128,0,0,0
  32               		.stabs	"unsigned long _Fract:t(0,21)=r(0,1);4;0;",128,0,0,0
  33               		.stabs	"unsigned long long _Fract:t(0,22)=r(0,1);8;0;",128,0,0,0
  34               		.stabs	"_Sat short _Fract:t(0,23)=r(0,1);1;0;",128,0,0,0
  35               		.stabs	"_Sat _Fract:t(0,24)=r(0,1);2;0;",128,0,0,0
  36               		.stabs	"_Sat long _Fract:t(0,25)=r(0,1);4;0;",128,0,0,0
  37               		.stabs	"_Sat long long _Fract:t(0,26)=r(0,1);8;0;",128,0,0,0
  38               		.stabs	"_Sat unsigned short _Fract:t(0,27)=r(0,1);1;0;",128,0,0,0
  39               		.stabs	"_Sat unsigned _Fract:t(0,28)=r(0,1);2;0;",128,0,0,0
  40               		.stabs	"_Sat unsigned long _Fract:t(0,29)=r(0,1);4;0;",128,0,0,0
  41               		.stabs	"_Sat unsigned long long _Fract:t(0,30)=r(0,1);8;0;",128,0,0,0
  42               		.stabs	"short _Accum:t(0,31)=r(0,1);2;0;",128,0,0,0
  43               		.stabs	"_Accum:t(0,32)=r(0,1);4;0;",128,0,0,0
  44               		.stabs	"long _Accum:t(0,33)=r(0,1);8;0;",128,0,0,0
  45               		.stabs	"long long _Accum:t(0,34)=r(0,1);8;0;",128,0,0,0
  46               		.stabs	"unsigned short _Accum:t(0,35)=r(0,1);2;0;",128,0,0,0
  47               		.stabs	"unsigned _Accum:t(0,36)=r(0,1);4;0;",128,0,0,0
  48               		.stabs	"unsigned long _Accum:t(0,37)=r(0,1);8;0;",128,0,0,0
  49               		.stabs	"unsigned long long _Accum:t(0,38)=r(0,1);8;0;",128,0,0,0
  50               		.stabs	"_Sat short _Accum:t(0,39)=r(0,1);2;0;",128,0,0,0
  51               		.stabs	"_Sat _Accum:t(0,40)=r(0,1);4;0;",128,0,0,0
  52               		.stabs	"_Sat long _Accum:t(0,41)=r(0,1);8;0;",128,0,0,0
  53               		.stabs	"_Sat long long _Accum:t(0,42)=r(0,1);8;0;",128,0,0,0
  54               		.stabs	"_Sat unsigned short _Accum:t(0,43)=r(0,1);2;0;",128,0,0,0
  55               		.stabs	"_Sat unsigned _Accum:t(0,44)=r(0,1);4;0;",128,0,0,0
  56               		.stabs	"_Sat unsigned long _Accum:t(0,45)=r(0,1);8;0;",128,0,0,0
  57               		.stabs	"_Sat unsigned long long _Accum:t(0,46)=r(0,1);8;0;",128,0,0,0
GAS LISTING /tmp/ccfeiFgI.s 			page 2


  58               		.stabs	"void:t(0,47)=(0,47)",128,0,0,0
  59               		.stabs	"/usr/lib/avr/include/inttypes.h",130,0,0,0
  60               		.stabs	"/usr/lib/gcc/avr/4.8.2/include/stdint.h",130,0,0,0
  61               		.stabs	"/usr/lib/avr/include/stdint.h",130,0,0,0
  62               		.stabs	"int8_t:t(3,1)=(0,10)",128,0,121,0
  63               		.stabs	"uint8_t:t(3,2)=(0,11)",128,0,122,0
  64               		.stabs	"int16_t:t(3,3)=(0,1)",128,0,123,0
  65               		.stabs	"uint16_t:t(3,4)=(0,4)",128,0,124,0
  66               		.stabs	"int32_t:t(3,5)=(0,3)",128,0,125,0
  67               		.stabs	"uint32_t:t(3,6)=(0,5)",128,0,126,0
  68               		.stabs	"int64_t:t(3,7)=(0,6)",128,0,128,0
  69               		.stabs	"uint64_t:t(3,8)=(0,7)",128,0,129,0
  70               		.stabs	"intptr_t:t(3,9)=(3,3)",128,0,142,0
  71               		.stabs	"uintptr_t:t(3,10)=(3,4)",128,0,147,0
  72               		.stabs	"int_least8_t:t(3,11)=(3,1)",128,0,159,0
  73               		.stabs	"uint_least8_t:t(3,12)=(3,2)",128,0,164,0
  74               		.stabs	"int_least16_t:t(3,13)=(3,3)",128,0,169,0
  75               		.stabs	"uint_least16_t:t(3,14)=(3,4)",128,0,174,0
  76               		.stabs	"int_least32_t:t(3,15)=(3,5)",128,0,179,0
  77               		.stabs	"uint_least32_t:t(3,16)=(3,6)",128,0,184,0
  78               		.stabs	"int_least64_t:t(3,17)=(3,7)",128,0,192,0
  79               		.stabs	"uint_least64_t:t(3,18)=(3,8)",128,0,199,0
  80               		.stabs	"int_fast8_t:t(3,19)=(3,1)",128,0,213,0
  81               		.stabs	"uint_fast8_t:t(3,20)=(3,2)",128,0,218,0
  82               		.stabs	"int_fast16_t:t(3,21)=(3,3)",128,0,223,0
  83               		.stabs	"uint_fast16_t:t(3,22)=(3,4)",128,0,228,0
  84               		.stabs	"int_fast32_t:t(3,23)=(3,5)",128,0,233,0
  85               		.stabs	"uint_fast32_t:t(3,24)=(3,6)",128,0,238,0
  86               		.stabs	"int_fast64_t:t(3,25)=(3,7)",128,0,246,0
  87               		.stabs	"uint_fast64_t:t(3,26)=(3,8)",128,0,253,0
  88               		.stabs	"intmax_t:t(3,27)=(3,7)",128,0,273,0
  89               		.stabs	"uintmax_t:t(3,28)=(3,8)",128,0,278,0
  90               		.stabn	162,0,0,0
  91               		.stabn	162,0,0,0
  92               		.stabs	"int_farptr_t:t(1,1)=(3,5)",128,0,77,0
  93               		.stabs	"uint_farptr_t:t(1,2)=(3,6)",128,0,81,0
  94               		.stabn	162,0,0,0
  95               		.stabs	"/usr/lib/avr/include/avr/pgmspace.h",130,0,0,0
  96               		.stabs	"/usr/lib/gcc/avr/4.8.2/include/stddef.h",130,0,0,0
  97               		.stabs	"size_t:t(5,1)=(0,4)",128,0,212,0
  98               		.stabn	162,0,0,0
  99               		.stabs	"/usr/lib/avr/include/avr/io.h",130,0,0,0
 100               		.stabs	"/usr/lib/avr/include/avr/fuse.h",130,0,0,0
 101               		.stabs	"__fuse_t:t(7,1)=(7,2)=s3low:(0,11),0,8;high:(0,11),8,8;extended:(0,11),16,8;;",128,0,244,0
 102               		.stabn	162,0,0,0
 103               		.stabn	162,0,0,0
 104               		.stabn	162,0,0,0
 105               		.stabs	"/usr/lib/avr/include/stdio.h",130,0,0,0
 106               		.stabs	"/usr/lib/gcc/avr/4.8.2/include/stdarg.h",130,0,0,0
 107               		.stabs	"__gnuc_va_list:t(9,1)=(9,2)=*(0,47)",128,0,40,0
 108               		.stabs	"va_list:t(9,3)=(9,1)",128,0,98,0
 109               		.stabn	162,0,0,0
 110               		.stabs	"__file:T(8,1)=s14buf:(8,2)=*(0,2),0,16;unget:(0,11),16,8;flags:(3,2),24,8;size:(0,1),32,16
 111               		.stabn	162,0,0,0
 112               		.stabs	"nRF24InitTransmit:F(0,47)",36,0,12,nRF24InitTransmit
 113               		.stabs	"SSPort:P(0,48)=*(0,49)=B(3,2)",64,0,12,28
 114               		.stabs	"SSPin:P(3,2)",64,0,12,22
GAS LISTING /tmp/ccfeiFgI.s 			page 3


 115               	.global	nRF24InitTransmit
 116               		.type	nRF24InitTransmit, @function
 117               	nRF24InitTransmit:
 118               		.stabd	46,0,0
   1:../../Libraries/nRF24/nRF24.c **** #include "SPI.h"
   2:../../Libraries/nRF24/nRF24.c **** #include <inttypes.h>
   3:../../Libraries/nRF24/nRF24.c **** #include "nRF24.h"
   4:../../Libraries/nRF24/nRF24.c **** #define F_CPU 1000000UL
   5:../../Libraries/nRF24/nRF24.c **** 
   6:../../Libraries/nRF24/nRF24.c **** #include <util/delay.h>
   7:../../Libraries/nRF24/nRF24.c **** #include <avr/pgmspace.h>
   8:../../Libraries/nRF24/nRF24.c **** #include <avr/io.h>
   9:../../Libraries/nRF24/nRF24.c **** #include <stdio.h>
  10:../../Libraries/nRF24/nRF24.c **** 
  11:../../Libraries/nRF24/nRF24.c **** 
  12:../../Libraries/nRF24/nRF24.c **** void nRF24InitTransmit(volatile uint8_t *SSPort, uint8_t SSPin){
 119               		.stabn	68,0,12,.LM0-.LFBB1
 120               	.LM0:
 121               	.LFBB1:
 122 0000 0F93      		push r16
 123 0002 1F93      		push r17
 124 0004 CF93      		push r28
 125 0006 DF93      		push r29
 126               	/* prologue: function */
 127               	/* frame size = 0 */
 128               	/* stack size = 4 */
 129               	.L__stack_usage = 4
 130 0008 EC01      		movw r28,r24
  13:../../Libraries/nRF24/nRF24.c ****   *SSPort &= ~(1<<SSPin);
 131               		.stabn	68,0,13,.LM1-.LFBB1
 132               	.LM1:
 133 000a 8881      		ld r24,Y
 134 000c 01E0      		ldi r16,lo8(1)
 135 000e 10E0      		ldi r17,0
 136 0010 00C0      		rjmp 2f
 137               		1:
 138 0012 000F      		lsl r16
 139               		2:
 140 0014 6A95      		dec r22
 141 0016 02F4      		brpl 1b
 142 0018 102F      		mov r17,r16
 143 001a 1095      		com r17
 144 001c 8123      		and r24,r17
 145 001e 8883      		st Y,r24
  14:../../Libraries/nRF24/nRF24.c ****   SPI_MasterTransmitByte(0x20);
 146               		.stabn	68,0,14,.LM2-.LFBB1
 147               	.LM2:
 148 0020 80E2      		ldi r24,lo8(32)
 149 0022 0E94 0000 		call SPI_MasterTransmitByte
  15:../../Libraries/nRF24/nRF24.c ****   SPI_MasterTransmitByte(0x7E); //0b01111110
 150               		.stabn	68,0,15,.LM3-.LFBB1
 151               	.LM3:
 152 0026 8EE7      		ldi r24,lo8(126)
 153 0028 0E94 0000 		call SPI_MasterTransmitByte
  16:../../Libraries/nRF24/nRF24.c ****   *SSPort |= (1<<SSPin);
 154               		.stabn	68,0,16,.LM4-.LFBB1
 155               	.LM4:
GAS LISTING /tmp/ccfeiFgI.s 			page 4


 156 002c 8881      		ld r24,Y
 157 002e 802B      		or r24,r16
 158 0030 8883      		st Y,r24
  17:../../Libraries/nRF24/nRF24.c ****   *SSPort &= ~(1<<SSPin);
 159               		.stabn	68,0,17,.LM5-.LFBB1
 160               	.LM5:
 161 0032 8881      		ld r24,Y
 162 0034 8123      		and r24,r17
 163 0036 8883      		st Y,r24
  18:../../Libraries/nRF24/nRF24.c ****   SPI_MasterTransmitByte(0x23);
 164               		.stabn	68,0,18,.LM6-.LFBB1
 165               	.LM6:
 166 0038 83E2      		ldi r24,lo8(35)
 167 003a 0E94 0000 		call SPI_MasterTransmitByte
  19:../../Libraries/nRF24/nRF24.c ****   SPI_MasterTransmitByte(0x03);
 168               		.stabn	68,0,19,.LM7-.LFBB1
 169               	.LM7:
 170 003e 83E0      		ldi r24,lo8(3)
 171 0040 0E94 0000 		call SPI_MasterTransmitByte
  20:../../Libraries/nRF24/nRF24.c ****   *SSPort |= (1<<SSPin);
 172               		.stabn	68,0,20,.LM8-.LFBB1
 173               	.LM8:
 174 0044 8881      		ld r24,Y
 175 0046 802B      		or r24,r16
 176 0048 8883      		st Y,r24
  21:../../Libraries/nRF24/nRF24.c ****   *SSPort &= ~(1<<SSPin);
 177               		.stabn	68,0,21,.LM9-.LFBB1
 178               	.LM9:
 179 004a 8881      		ld r24,Y
 180 004c 8123      		and r24,r17
 181 004e 8883      		st Y,r24
  22:../../Libraries/nRF24/nRF24.c ****   SPI_MasterTransmitByte(0x24);
 182               		.stabn	68,0,22,.LM10-.LFBB1
 183               	.LM10:
 184 0050 84E2      		ldi r24,lo8(36)
 185 0052 0E94 0000 		call SPI_MasterTransmitByte
  23:../../Libraries/nRF24/nRF24.c ****   SPI_MasterTransmitByte(0x0F);
 186               		.stabn	68,0,23,.LM11-.LFBB1
 187               	.LM11:
 188 0056 8FE0      		ldi r24,lo8(15)
 189 0058 0E94 0000 		call SPI_MasterTransmitByte
  24:../../Libraries/nRF24/nRF24.c ****   *SSPort |= (1<<SSPin);
 190               		.stabn	68,0,24,.LM12-.LFBB1
 191               	.LM12:
 192 005c 8881      		ld r24,Y
 193 005e 802B      		or r24,r16
 194 0060 8883      		st Y,r24
  25:../../Libraries/nRF24/nRF24.c ****   *SSPort &= ~(1<<SSPin);
 195               		.stabn	68,0,25,.LM13-.LFBB1
 196               	.LM13:
 197 0062 8881      		ld r24,Y
 198 0064 8123      		and r24,r17
 199 0066 8883      		st Y,r24
  26:../../Libraries/nRF24/nRF24.c ****   SPI_MasterTransmitByte(0x25);
 200               		.stabn	68,0,26,.LM14-.LFBB1
 201               	.LM14:
 202 0068 85E2      		ldi r24,lo8(37)
GAS LISTING /tmp/ccfeiFgI.s 			page 5


 203 006a 0E94 0000 		call SPI_MasterTransmitByte
  27:../../Libraries/nRF24/nRF24.c ****   SPI_MasterTransmitByte(0x46);
 204               		.stabn	68,0,27,.LM15-.LFBB1
 205               	.LM15:
 206 006e 86E4      		ldi r24,lo8(70)
 207 0070 0E94 0000 		call SPI_MasterTransmitByte
  28:../../Libraries/nRF24/nRF24.c ****   *SSPort |= (1<<SSPin);
 208               		.stabn	68,0,28,.LM16-.LFBB1
 209               	.LM16:
 210 0074 8881      		ld r24,Y
 211 0076 802B      		or r24,r16
 212 0078 8883      		st Y,r24
 213               	/* epilogue start */
  29:../../Libraries/nRF24/nRF24.c ****   //*SSPort &= ~(1<<SSPin);
  30:../../Libraries/nRF24/nRF24.c ****   //SPI_MasterTransmitByte(0x2B);
  31:../../Libraries/nRF24/nRF24.c ****   //SPI_MasterTransmitByte(0x01);
  32:../../Libraries/nRF24/nRF24.c ****   //*SSPort |= (1<<SSPin);
  33:../../Libraries/nRF24/nRF24.c ****   
  34:../../Libraries/nRF24/nRF24.c **** }
 214               		.stabn	68,0,34,.LM17-.LFBB1
 215               	.LM17:
 216 007a DF91      		pop r29
 217 007c CF91      		pop r28
 218 007e 1F91      		pop r17
 219 0080 0F91      		pop r16
 220 0082 0895      		ret
 221               		.size	nRF24InitTransmit, .-nRF24InitTransmit
 222               	.Lscope1:
 223               		.stabs	"",36,0,0,.Lscope1-.LFBB1
 224               		.stabd	78,0,0
 225               		.stabs	"nRF24InitReceive:F(0,47)",36,0,36,nRF24InitReceive
 226               		.stabs	"SSPort:P(0,48)",64,0,36,28
 227               		.stabs	"SSPin:P(3,2)",64,0,36,22
 228               	.global	nRF24InitReceive
 229               		.type	nRF24InitReceive, @function
 230               	nRF24InitReceive:
 231               		.stabd	46,0,0
  35:../../Libraries/nRF24/nRF24.c **** 
  36:../../Libraries/nRF24/nRF24.c **** void nRF24InitReceive(volatile uint8_t *SSPort, uint8_t SSPin){
 232               		.stabn	68,0,36,.LM18-.LFBB2
 233               	.LM18:
 234               	.LFBB2:
 235 0084 0F93      		push r16
 236 0086 1F93      		push r17
 237 0088 CF93      		push r28
 238 008a DF93      		push r29
 239               	/* prologue: function */
 240               	/* frame size = 0 */
 241               	/* stack size = 4 */
 242               	.L__stack_usage = 4
 243 008c EC01      		movw r28,r24
  37:../../Libraries/nRF24/nRF24.c ****   *SSPort &= ~(1<<SSPin);
 244               		.stabn	68,0,37,.LM19-.LFBB2
 245               	.LM19:
 246 008e 8881      		ld r24,Y
 247 0090 01E0      		ldi r16,lo8(1)
 248 0092 10E0      		ldi r17,0
GAS LISTING /tmp/ccfeiFgI.s 			page 6


 249 0094 00C0      		rjmp 2f
 250               		1:
 251 0096 000F      		lsl r16
 252               		2:
 253 0098 6A95      		dec r22
 254 009a 02F4      		brpl 1b
 255 009c 102F      		mov r17,r16
 256 009e 1095      		com r17
 257 00a0 8123      		and r24,r17
 258 00a2 8883      		st Y,r24
  38:../../Libraries/nRF24/nRF24.c ****   SPI_MasterTransmitByte(0x20);
 259               		.stabn	68,0,38,.LM20-.LFBB2
 260               	.LM20:
 261 00a4 80E2      		ldi r24,lo8(32)
 262 00a6 0E94 0000 		call SPI_MasterTransmitByte
  39:../../Libraries/nRF24/nRF24.c ****   SPI_MasterTransmitByte(0x7F); //0b01111111
 263               		.stabn	68,0,39,.LM21-.LFBB2
 264               	.LM21:
 265 00aa 8FE7      		ldi r24,lo8(127)
 266 00ac 0E94 0000 		call SPI_MasterTransmitByte
  40:../../Libraries/nRF24/nRF24.c ****   *SSPort |= (1<<SSPin);
 267               		.stabn	68,0,40,.LM22-.LFBB2
 268               	.LM22:
 269 00b0 8881      		ld r24,Y
 270 00b2 802B      		or r24,r16
 271 00b4 8883      		st Y,r24
  41:../../Libraries/nRF24/nRF24.c ****   *SSPort &= ~(1<<SSPin);
 272               		.stabn	68,0,41,.LM23-.LFBB2
 273               	.LM23:
 274 00b6 8881      		ld r24,Y
 275 00b8 8123      		and r24,r17
 276 00ba 8883      		st Y,r24
  42:../../Libraries/nRF24/nRF24.c ****   SPI_MasterTransmitByte(0x23);
 277               		.stabn	68,0,42,.LM24-.LFBB2
 278               	.LM24:
 279 00bc 83E2      		ldi r24,lo8(35)
 280 00be 0E94 0000 		call SPI_MasterTransmitByte
  43:../../Libraries/nRF24/nRF24.c ****   SPI_MasterTransmitByte(0x03);
 281               		.stabn	68,0,43,.LM25-.LFBB2
 282               	.LM25:
 283 00c2 83E0      		ldi r24,lo8(3)
 284 00c4 0E94 0000 		call SPI_MasterTransmitByte
  44:../../Libraries/nRF24/nRF24.c ****   *SSPort |= (1<<SSPin);
 285               		.stabn	68,0,44,.LM26-.LFBB2
 286               	.LM26:
 287 00c8 8881      		ld r24,Y
 288 00ca 802B      		or r24,r16
 289 00cc 8883      		st Y,r24
  45:../../Libraries/nRF24/nRF24.c ****   *SSPort &= ~(1<<SSPin);
 290               		.stabn	68,0,45,.LM27-.LFBB2
 291               	.LM27:
 292 00ce 8881      		ld r24,Y
 293 00d0 8123      		and r24,r17
 294 00d2 8883      		st Y,r24
  46:../../Libraries/nRF24/nRF24.c ****   SPI_MasterTransmitByte(0x24);
 295               		.stabn	68,0,46,.LM28-.LFBB2
 296               	.LM28:
GAS LISTING /tmp/ccfeiFgI.s 			page 7


 297 00d4 84E2      		ldi r24,lo8(36)
 298 00d6 0E94 0000 		call SPI_MasterTransmitByte
  47:../../Libraries/nRF24/nRF24.c ****   SPI_MasterTransmitByte(0x0F);
 299               		.stabn	68,0,47,.LM29-.LFBB2
 300               	.LM29:
 301 00da 8FE0      		ldi r24,lo8(15)
 302 00dc 0E94 0000 		call SPI_MasterTransmitByte
  48:../../Libraries/nRF24/nRF24.c ****   *SSPort |= (1<<SSPin);
 303               		.stabn	68,0,48,.LM30-.LFBB2
 304               	.LM30:
 305 00e0 8881      		ld r24,Y
 306 00e2 802B      		or r24,r16
 307 00e4 8883      		st Y,r24
  49:../../Libraries/nRF24/nRF24.c ****   *SSPort &= ~(1<<SSPin);
 308               		.stabn	68,0,49,.LM31-.LFBB2
 309               	.LM31:
 310 00e6 8881      		ld r24,Y
 311 00e8 8123      		and r24,r17
 312 00ea 8883      		st Y,r24
  50:../../Libraries/nRF24/nRF24.c ****   SPI_MasterTransmitByte(0x25);
 313               		.stabn	68,0,50,.LM32-.LFBB2
 314               	.LM32:
 315 00ec 85E2      		ldi r24,lo8(37)
 316 00ee 0E94 0000 		call SPI_MasterTransmitByte
  51:../../Libraries/nRF24/nRF24.c ****   SPI_MasterTransmitByte(0x46);
 317               		.stabn	68,0,51,.LM33-.LFBB2
 318               	.LM33:
 319 00f2 86E4      		ldi r24,lo8(70)
 320 00f4 0E94 0000 		call SPI_MasterTransmitByte
  52:../../Libraries/nRF24/nRF24.c ****   *SSPort |= (1<<SSPin);
 321               		.stabn	68,0,52,.LM34-.LFBB2
 322               	.LM34:
 323 00f8 8881      		ld r24,Y
 324 00fa 802B      		or r24,r16
 325 00fc 8883      		st Y,r24
 326               	/* epilogue start */
  53:../../Libraries/nRF24/nRF24.c ****   //*SSPort &= ~(1<<SSPin);
  54:../../Libraries/nRF24/nRF24.c ****   //SPI_MasterTransmitByte(0x2B);
  55:../../Libraries/nRF24/nRF24.c ****   //SPI_MasterTransmitByte(0x01);
  56:../../Libraries/nRF24/nRF24.c ****   //*SSPort |= (1<<SSPin);
  57:../../Libraries/nRF24/nRF24.c ****   
  58:../../Libraries/nRF24/nRF24.c **** }
 327               		.stabn	68,0,58,.LM35-.LFBB2
 328               	.LM35:
 329 00fe DF91      		pop r29
 330 0100 CF91      		pop r28
 331 0102 1F91      		pop r17
 332 0104 0F91      		pop r16
 333 0106 0895      		ret
 334               		.size	nRF24InitReceive, .-nRF24InitReceive
 335               	.Lscope2:
 336               		.stabs	"",36,0,0,.Lscope2-.LFBB2
 337               		.stabd	78,0,0
 338               		.stabs	"WriteTXCharTransmit:F(0,47)",36,0,60,WriteTXCharTransmit
 339               		.stabs	"Data:P(0,2)",64,0,60,11
 340               		.stabs	"CEPort:P(0,48)",64,0,60,8
 341               		.stabs	"CEPin:P(3,2)",64,0,60,20
GAS LISTING /tmp/ccfeiFgI.s 			page 8


 342               		.stabs	"SSPort:P(0,48)",64,0,60,14
 343               		.stabs	"SSPin:P(3,2)",64,0,60,16
 344               	.global	WriteTXCharTransmit
 345               		.type	WriteTXCharTransmit, @function
 346               	WriteTXCharTransmit:
 347               		.stabd	46,0,0
  59:../../Libraries/nRF24/nRF24.c **** 
  60:../../Libraries/nRF24/nRF24.c **** void WriteTXCharTransmit(char Data, volatile uint8_t *CEPort, uint8_t CEPin, volatile uint8_t *SSPo
 348               		.stabn	68,0,60,.LM36-.LFBB3
 349               	.LM36:
 350               	.LFBB3:
 351 0108 8F92      		push r8
 352 010a 9F92      		push r9
 353 010c BF92      		push r11
 354 010e CF92      		push r12
 355 0110 DF92      		push r13
 356 0112 EF92      		push r14
 357 0114 FF92      		push r15
 358 0116 0F93      		push r16
 359 0118 1F93      		push r17
 360 011a CF93      		push r28
 361 011c DF93      		push r29
 362 011e 1F92      		push __zero_reg__
 363 0120 CDB7      		in r28,__SP_L__
 364 0122 DEB7      		in r29,__SP_H__
 365               	/* prologue: function */
 366               	/* frame size = 1 */
 367               	/* stack size = 12 */
 368               	.L__stack_usage = 12
 369 0124 B82E      		mov r11,r24
 370 0126 4B01      		movw r8,r22
 371 0128 7901      		movw r14,r18
  61:../../Libraries/nRF24/nRF24.c ****   
  62:../../Libraries/nRF24/nRF24.c ****   *SSPort &= ~(1<<SSPin);  
 372               		.stabn	68,0,62,.LM37-.LFBB3
 373               	.LM37:
 374 012a F901      		movw r30,r18
 375 012c 8081      		ld r24,Z
 376 012e CC24      		clr r12
 377 0130 C394      		inc r12
 378 0132 D12C      		mov r13,__zero_reg__
 379 0134 9601      		movw r18,r12
 380 0136 00C0      		rjmp 2f
 381               		1:
 382 0138 220F      		lsl r18
 383 013a 331F      		rol r19
 384               		2:
 385 013c 0A95      		dec r16
 386 013e 02F4      		brpl 1b
 387 0140 8901      		movw r16,r18
 388 0142 922F      		mov r25,r18
 389 0144 9095      		com r25
 390 0146 9823      		and r25,r24
 391 0148 9083      		st Z,r25
  63:../../Libraries/nRF24/nRF24.c ****   SPI_MasterTransmitByte(0xA0);
 392               		.stabn	68,0,63,.LM38-.LFBB3
 393               	.LM38:
GAS LISTING /tmp/ccfeiFgI.s 			page 9


 394 014a 80EA      		ldi r24,lo8(-96)
 395 014c 4983      		std Y+1,r20
 396 014e 0E94 0000 		call SPI_MasterTransmitByte
  64:../../Libraries/nRF24/nRF24.c ****   SPI_MasterTransmitByte(Data);
 397               		.stabn	68,0,64,.LM39-.LFBB3
 398               	.LM39:
 399 0152 8B2D      		mov r24,r11
 400 0154 0E94 0000 		call SPI_MasterTransmitByte
  65:../../Libraries/nRF24/nRF24.c ****   *SSPort |= (1<<SSPin);
 401               		.stabn	68,0,65,.LM40-.LFBB3
 402               	.LM40:
 403 0158 F701      		movw r30,r14
 404 015a 8081      		ld r24,Z
 405 015c 802B      		or r24,r16
 406 015e 8083      		st Z,r24
  66:../../Libraries/nRF24/nRF24.c **** 
  67:../../Libraries/nRF24/nRF24.c ****   *CEPort |= (1<<CEPin); 
 407               		.stabn	68,0,67,.LM41-.LFBB3
 408               	.LM41:
 409 0160 F401      		movw r30,r8
 410 0162 8081      		ld r24,Z
 411 0164 4981      		ldd r20,Y+1
 412 0166 042E      		mov r0,r20
 413 0168 00C0      		rjmp 2f
 414               		1:
 415 016a CC0C      		lsl r12
 416               		2:
 417 016c 0A94      		dec r0
 418 016e 02F4      		brpl 1b
 419 0170 8C29      		or r24,r12
 420 0172 8083      		st Z,r24
 421               	.LBB4:
 422               	.LBB5:
 423               		.stabs	"/usr/lib/avr/include/util/delay.h",132,0,0,.Ltext1
 424               	.Ltext1:
   1:/usr/lib/avr/include/util/delay.h **** /* Copyright (c) 2002, Marek Michalkiewicz
   2:/usr/lib/avr/include/util/delay.h ****    Copyright (c) 2004,2005,2007 Joerg Wunsch
   3:/usr/lib/avr/include/util/delay.h ****    Copyright (c) 2007  Florin-Viorel Petrov
   4:/usr/lib/avr/include/util/delay.h ****    All rights reserved.
   5:/usr/lib/avr/include/util/delay.h **** 
   6:/usr/lib/avr/include/util/delay.h ****    Redistribution and use in source and binary forms, with or without
   7:/usr/lib/avr/include/util/delay.h ****    modification, are permitted provided that the following conditions are met:
   8:/usr/lib/avr/include/util/delay.h **** 
   9:/usr/lib/avr/include/util/delay.h ****    * Redistributions of source code must retain the above copyright
  10:/usr/lib/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer.
  11:/usr/lib/avr/include/util/delay.h **** 
  12:/usr/lib/avr/include/util/delay.h ****    * Redistributions in binary form must reproduce the above copyright
  13:/usr/lib/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer in
  14:/usr/lib/avr/include/util/delay.h ****      the documentation and/or other materials provided with the
  15:/usr/lib/avr/include/util/delay.h ****      distribution.
  16:/usr/lib/avr/include/util/delay.h **** 
  17:/usr/lib/avr/include/util/delay.h ****    * Neither the name of the copyright holders nor the names of
  18:/usr/lib/avr/include/util/delay.h ****      contributors may be used to endorse or promote products derived
  19:/usr/lib/avr/include/util/delay.h ****      from this software without specific prior written permission.
  20:/usr/lib/avr/include/util/delay.h **** 
  21:/usr/lib/avr/include/util/delay.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:/usr/lib/avr/include/util/delay.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
GAS LISTING /tmp/ccfeiFgI.s 			page 10


  23:/usr/lib/avr/include/util/delay.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:/usr/lib/avr/include/util/delay.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  25:/usr/lib/avr/include/util/delay.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:/usr/lib/avr/include/util/delay.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:/usr/lib/avr/include/util/delay.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:/usr/lib/avr/include/util/delay.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:/usr/lib/avr/include/util/delay.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:/usr/lib/avr/include/util/delay.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:/usr/lib/avr/include/util/delay.h ****   POSSIBILITY OF SUCH DAMAGE. */
  32:/usr/lib/avr/include/util/delay.h **** 
  33:/usr/lib/avr/include/util/delay.h **** /* $Id: delay.h.in 2251 2011-09-14 08:20:33Z joerg_wunsch $ */
  34:/usr/lib/avr/include/util/delay.h **** 
  35:/usr/lib/avr/include/util/delay.h **** #ifndef _UTIL_DELAY_H_
  36:/usr/lib/avr/include/util/delay.h **** #define _UTIL_DELAY_H_ 1
  37:/usr/lib/avr/include/util/delay.h **** 
  38:/usr/lib/avr/include/util/delay.h **** #ifndef __HAS_DELAY_CYCLES
  39:/usr/lib/avr/include/util/delay.h **** #define __HAS_DELAY_CYCLES 1
  40:/usr/lib/avr/include/util/delay.h **** #endif
  41:/usr/lib/avr/include/util/delay.h **** 
  42:/usr/lib/avr/include/util/delay.h **** #include <inttypes.h>
  43:/usr/lib/avr/include/util/delay.h **** #include <util/delay_basic.h>
  44:/usr/lib/avr/include/util/delay.h **** #include <math.h>
  45:/usr/lib/avr/include/util/delay.h **** 
  46:/usr/lib/avr/include/util/delay.h **** /** \file */
  47:/usr/lib/avr/include/util/delay.h **** /** \defgroup util_delay <util/delay.h>: Convenience functions for busy-wait delay loops
  48:/usr/lib/avr/include/util/delay.h ****     \code
  49:/usr/lib/avr/include/util/delay.h ****     #define F_CPU 1000000UL  // 1 MHz
  50:/usr/lib/avr/include/util/delay.h ****     //#define F_CPU 14.7456E6
  51:/usr/lib/avr/include/util/delay.h ****     #include <util/delay.h>
  52:/usr/lib/avr/include/util/delay.h ****     \endcode
  53:/usr/lib/avr/include/util/delay.h **** 
  54:/usr/lib/avr/include/util/delay.h ****     \note As an alternative method, it is possible to pass the
  55:/usr/lib/avr/include/util/delay.h ****     F_CPU macro down to the compiler from the Makefile.
  56:/usr/lib/avr/include/util/delay.h ****     Obviously, in that case, no \c \#define statement should be
  57:/usr/lib/avr/include/util/delay.h ****     used.
  58:/usr/lib/avr/include/util/delay.h **** 
  59:/usr/lib/avr/include/util/delay.h ****     The functions in this header file are wrappers around the basic
  60:/usr/lib/avr/include/util/delay.h ****     busy-wait functions from <util/delay_basic.h>.  They are meant as
  61:/usr/lib/avr/include/util/delay.h ****     convenience functions where actual time values can be specified
  62:/usr/lib/avr/include/util/delay.h ****     rather than a number of cycles to wait for.  The idea behind is
  63:/usr/lib/avr/include/util/delay.h ****     that compile-time constant expressions will be eliminated by
  64:/usr/lib/avr/include/util/delay.h ****     compiler optimization so floating-point expressions can be used
  65:/usr/lib/avr/include/util/delay.h ****     to calculate the number of delay cycles needed based on the CPU
  66:/usr/lib/avr/include/util/delay.h ****     frequency passed by the macro F_CPU.
  67:/usr/lib/avr/include/util/delay.h **** 
  68:/usr/lib/avr/include/util/delay.h ****     \note In order for these functions to work as intended, compiler
  69:/usr/lib/avr/include/util/delay.h ****     optimizations <em>must</em> be enabled, and the delay time
  70:/usr/lib/avr/include/util/delay.h ****     <em>must</em> be an expression that is a known constant at
  71:/usr/lib/avr/include/util/delay.h ****     compile-time.  If these requirements are not met, the resulting
  72:/usr/lib/avr/include/util/delay.h ****     delay will be much longer (and basically unpredictable), and
  73:/usr/lib/avr/include/util/delay.h ****     applications that otherwise do not use floating-point calculations
  74:/usr/lib/avr/include/util/delay.h ****     will experience severe code bloat by the floating-point library
  75:/usr/lib/avr/include/util/delay.h ****     routines linked into the application.
  76:/usr/lib/avr/include/util/delay.h **** 
  77:/usr/lib/avr/include/util/delay.h ****     The functions available allow the specification of microsecond, and
  78:/usr/lib/avr/include/util/delay.h ****     millisecond delays directly, using the application-supplied macro
  79:/usr/lib/avr/include/util/delay.h ****     F_CPU as the CPU clock frequency (in Hertz).
GAS LISTING /tmp/ccfeiFgI.s 			page 11


  80:/usr/lib/avr/include/util/delay.h **** 
  81:/usr/lib/avr/include/util/delay.h **** */
  82:/usr/lib/avr/include/util/delay.h **** 
  83:/usr/lib/avr/include/util/delay.h **** #if !defined(__DOXYGEN__)
  84:/usr/lib/avr/include/util/delay.h **** static inline void _delay_us(double __us) __attribute__((always_inline));
  85:/usr/lib/avr/include/util/delay.h **** static inline void _delay_ms(double __ms) __attribute__((always_inline));
  86:/usr/lib/avr/include/util/delay.h **** #endif
  87:/usr/lib/avr/include/util/delay.h **** 
  88:/usr/lib/avr/include/util/delay.h **** #ifndef F_CPU
  89:/usr/lib/avr/include/util/delay.h **** /* prevent compiler error by supplying a default */
  90:/usr/lib/avr/include/util/delay.h **** # warning "F_CPU not defined for <util/delay.h>"
  91:/usr/lib/avr/include/util/delay.h **** # define F_CPU 1000000UL
  92:/usr/lib/avr/include/util/delay.h **** #endif
  93:/usr/lib/avr/include/util/delay.h **** 
  94:/usr/lib/avr/include/util/delay.h **** #ifndef __OPTIMIZE__
  95:/usr/lib/avr/include/util/delay.h **** # warning "Compiler optimizations disabled; functions from <util/delay.h> won't work as designed"
  96:/usr/lib/avr/include/util/delay.h **** #endif
  97:/usr/lib/avr/include/util/delay.h **** 
  98:/usr/lib/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
  99:/usr/lib/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 100:/usr/lib/avr/include/util/delay.h ****   __STDC_HOSTED__
 101:/usr/lib/avr/include/util/delay.h **** #  include <math.h>
 102:/usr/lib/avr/include/util/delay.h **** #endif
 103:/usr/lib/avr/include/util/delay.h **** 
 104:/usr/lib/avr/include/util/delay.h **** /**
 105:/usr/lib/avr/include/util/delay.h ****    \ingroup util_delay
 106:/usr/lib/avr/include/util/delay.h **** 
 107:/usr/lib/avr/include/util/delay.h ****    Perform a delay of \c __ms milliseconds, using _delay_loop_2().
 108:/usr/lib/avr/include/util/delay.h **** 
 109:/usr/lib/avr/include/util/delay.h ****    The macro F_CPU is supposed to be defined to a
 110:/usr/lib/avr/include/util/delay.h ****    constant defining the CPU clock frequency (in Hertz).
 111:/usr/lib/avr/include/util/delay.h **** 
 112:/usr/lib/avr/include/util/delay.h ****    The maximal possible delay is 262.14 ms / F_CPU in MHz.
 113:/usr/lib/avr/include/util/delay.h **** 
 114:/usr/lib/avr/include/util/delay.h ****    When the user request delay which exceed the maximum possible one,
 115:/usr/lib/avr/include/util/delay.h ****    _delay_ms() provides a decreased resolution functionality. In this
 116:/usr/lib/avr/include/util/delay.h ****    mode _delay_ms() will work with a resolution of 1/10 ms, providing
 117:/usr/lib/avr/include/util/delay.h ****    delays up to 6.5535 seconds (independent from CPU frequency).  The
 118:/usr/lib/avr/include/util/delay.h ****    user will not be informed about decreased resolution.
 119:/usr/lib/avr/include/util/delay.h **** 
 120:/usr/lib/avr/include/util/delay.h ****    If the avr-gcc toolchain has __builtin_avr_delay_cycles(unsigned long)
 121:/usr/lib/avr/include/util/delay.h ****    support, maximal possible delay is 4294967.295 ms/ F_CPU in MHz. For
 122:/usr/lib/avr/include/util/delay.h ****    values greater than the maximal possible delay, overflows results in
 123:/usr/lib/avr/include/util/delay.h ****    no delay i.e., 0ms.
 124:/usr/lib/avr/include/util/delay.h **** 
 125:/usr/lib/avr/include/util/delay.h ****    Conversion of __us into clock cycles may not always result in integer.
 126:/usr/lib/avr/include/util/delay.h ****    By default, the clock cycles rounded up to next integer. This ensures that
 127:/usr/lib/avr/include/util/delay.h ****    the user gets atleast __us microseconds of delay.
 128:/usr/lib/avr/include/util/delay.h **** 
 129:/usr/lib/avr/include/util/delay.h ****    Alternatively, user can define __DELAY_ROUND_DOWN__ and __DELAY_ROUND_CLOSEST__
 130:/usr/lib/avr/include/util/delay.h ****    to round down and round to closest integer.
 131:/usr/lib/avr/include/util/delay.h **** 
 132:/usr/lib/avr/include/util/delay.h ****    Note: The new implementation of _delay_ms(double __ms) with 
 133:/usr/lib/avr/include/util/delay.h ****     __builtin_avr_delay_cycles(unsigned long) support is not backward compatible. 
 134:/usr/lib/avr/include/util/delay.h ****    User can define __DELAY_BACKWARD_COMPATIBLE__ to get a backward compatible delay.
 135:/usr/lib/avr/include/util/delay.h ****    Also, the backward compatible
 136:/usr/lib/avr/include/util/delay.h ****    algorithm will be chosen if the code is compiled in a <em>freestanding
GAS LISTING /tmp/ccfeiFgI.s 			page 12


 137:/usr/lib/avr/include/util/delay.h ****    environment</em> (GCC option \c -ffreestanding), as the math functions
 138:/usr/lib/avr/include/util/delay.h ****    required for rounding are not available to the compiler then.
 139:/usr/lib/avr/include/util/delay.h **** 
 140:/usr/lib/avr/include/util/delay.h ****  */
 141:/usr/lib/avr/include/util/delay.h **** void
 142:/usr/lib/avr/include/util/delay.h **** _delay_ms(double __ms)
 143:/usr/lib/avr/include/util/delay.h **** {
 144:/usr/lib/avr/include/util/delay.h **** 	uint16_t __ticks;
 145:/usr/lib/avr/include/util/delay.h **** 	double __tmp ; 
 146:/usr/lib/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 147:/usr/lib/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 148:/usr/lib/avr/include/util/delay.h ****   __STDC_HOSTED__
 149:/usr/lib/avr/include/util/delay.h **** 	uint32_t __ticks_dc;
 150:/usr/lib/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 151:/usr/lib/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 152:/usr/lib/avr/include/util/delay.h **** 
 153:/usr/lib/avr/include/util/delay.h **** 	#if defined(__DELAY_ROUND_DOWN__)
 154:/usr/lib/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)fabs(__tmp);
 155:/usr/lib/avr/include/util/delay.h **** 
 156:/usr/lib/avr/include/util/delay.h **** 	#elif defined(__DELAY_ROUND_CLOSEST__)
 157:/usr/lib/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(fabs(__tmp)+0.5);
 158:/usr/lib/avr/include/util/delay.h **** 
 159:/usr/lib/avr/include/util/delay.h **** 	#else
 160:/usr/lib/avr/include/util/delay.h **** 		//round up by default
 161:/usr/lib/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
 162:/usr/lib/avr/include/util/delay.h **** 	#endif
 163:/usr/lib/avr/include/util/delay.h **** 
 164:/usr/lib/avr/include/util/delay.h **** 	__builtin_avr_delay_cycles(__ticks_dc);
 165:/usr/lib/avr/include/util/delay.h **** 
 166:/usr/lib/avr/include/util/delay.h **** #else
 167:/usr/lib/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 4e3) * __ms;
 168:/usr/lib/avr/include/util/delay.h **** 	if (__tmp < 1.0)
 169:/usr/lib/avr/include/util/delay.h **** 		__ticks = 1;
 170:/usr/lib/avr/include/util/delay.h **** 	else if (__tmp > 65535)
 171:/usr/lib/avr/include/util/delay.h **** 	{
 172:/usr/lib/avr/include/util/delay.h **** 		//	__ticks = requested delay in 1/10 ms
 173:/usr/lib/avr/include/util/delay.h **** 		__ticks = (uint16_t) (__ms * 10.0);
 174:/usr/lib/avr/include/util/delay.h **** 		while(__ticks)
 175:/usr/lib/avr/include/util/delay.h **** 		{
 176:/usr/lib/avr/include/util/delay.h **** 			// wait 1/10 ms
 177:/usr/lib/avr/include/util/delay.h **** 			_delay_loop_2(((F_CPU) / 4e3) / 10);
 178:/usr/lib/avr/include/util/delay.h **** 			__ticks --;
 179:/usr/lib/avr/include/util/delay.h **** 		}
 180:/usr/lib/avr/include/util/delay.h **** 		return;
 181:/usr/lib/avr/include/util/delay.h **** 	}
 182:/usr/lib/avr/include/util/delay.h **** 	else
 183:/usr/lib/avr/include/util/delay.h **** 		__ticks = (uint16_t)__tmp;
 184:/usr/lib/avr/include/util/delay.h **** 	_delay_loop_2(__ticks);
 185:/usr/lib/avr/include/util/delay.h **** #endif
 186:/usr/lib/avr/include/util/delay.h **** }
 187:/usr/lib/avr/include/util/delay.h **** 
 188:/usr/lib/avr/include/util/delay.h **** /**
 189:/usr/lib/avr/include/util/delay.h ****    \ingroup util_delay
 190:/usr/lib/avr/include/util/delay.h **** 
 191:/usr/lib/avr/include/util/delay.h ****    Perform a delay of \c __us microseconds, using _delay_loop_1().
 192:/usr/lib/avr/include/util/delay.h **** 
 193:/usr/lib/avr/include/util/delay.h ****    The macro F_CPU is supposed to be defined to a
GAS LISTING /tmp/ccfeiFgI.s 			page 13


 194:/usr/lib/avr/include/util/delay.h ****    constant defining the CPU clock frequency (in Hertz).
 195:/usr/lib/avr/include/util/delay.h **** 
 196:/usr/lib/avr/include/util/delay.h ****    The maximal possible delay is 768 us / F_CPU in MHz.
 197:/usr/lib/avr/include/util/delay.h **** 
 198:/usr/lib/avr/include/util/delay.h ****    If the user requests a delay greater than the maximal possible one,
 199:/usr/lib/avr/include/util/delay.h ****    _delay_us() will automatically call _delay_ms() instead.  The user
 200:/usr/lib/avr/include/util/delay.h ****    will not be informed about this case.
 201:/usr/lib/avr/include/util/delay.h **** 
 202:/usr/lib/avr/include/util/delay.h ****    If the avr-gcc toolchain has __builtin_avr_delay_cycles(unsigned long)
 203:/usr/lib/avr/include/util/delay.h ****    support, maximal possible delay is 4294967.295 us/ F_CPU in MHz. For
 204:/usr/lib/avr/include/util/delay.h ****    values greater than the maximal possible delay, overflow results in
 205:/usr/lib/avr/include/util/delay.h ****    no delay i.e., 0us.
 206:/usr/lib/avr/include/util/delay.h ****   
 207:/usr/lib/avr/include/util/delay.h ****    Conversion of __us into clock cycles may not always result in integer.
 208:/usr/lib/avr/include/util/delay.h ****    By default, the clock cycles rounded up to next integer. This ensures that
 209:/usr/lib/avr/include/util/delay.h ****    the user gets atleast __us microseconds of delay.
 210:/usr/lib/avr/include/util/delay.h **** 
 211:/usr/lib/avr/include/util/delay.h ****    Alternatively, user can define __DELAY_ROUND_DOWN__ and __DELAY_ROUND_CLOSEST__
 212:/usr/lib/avr/include/util/delay.h ****    to round down and round to closest integer.
 213:/usr/lib/avr/include/util/delay.h ****  
 214:/usr/lib/avr/include/util/delay.h ****    Note: The new implementation of _delay_us(double __us) with 
 215:/usr/lib/avr/include/util/delay.h ****     __builtin_avr_delay_cycles(unsigned long) support is not backward compatible.
 216:/usr/lib/avr/include/util/delay.h ****    User can define __DELAY_BACKWARD_COMPATIBLE__ to get a backward compatible delay.
 217:/usr/lib/avr/include/util/delay.h ****    Also, the backward compatible
 218:/usr/lib/avr/include/util/delay.h ****    algorithm will be chosen if the code is compiled in a <em>freestanding
 219:/usr/lib/avr/include/util/delay.h ****    environment</em> (GCC option \c -ffreestanding), as the math functions
 220:/usr/lib/avr/include/util/delay.h ****    required for rounding are not available to the compiler then.
 221:/usr/lib/avr/include/util/delay.h **** 
 222:/usr/lib/avr/include/util/delay.h ****  */
 223:/usr/lib/avr/include/util/delay.h **** void
 224:/usr/lib/avr/include/util/delay.h **** _delay_us(double __us)
 225:/usr/lib/avr/include/util/delay.h **** {
 226:/usr/lib/avr/include/util/delay.h **** 	uint8_t __ticks;
 227:/usr/lib/avr/include/util/delay.h **** 	double __tmp ; 
 228:/usr/lib/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 229:/usr/lib/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 230:/usr/lib/avr/include/util/delay.h ****   __STDC_HOSTED__
 231:/usr/lib/avr/include/util/delay.h **** 	uint32_t __ticks_dc;
 232:/usr/lib/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 233:/usr/lib/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e6) * __us;
 234:/usr/lib/avr/include/util/delay.h **** 
 235:/usr/lib/avr/include/util/delay.h **** 	#if defined(__DELAY_ROUND_DOWN__)
 236:/usr/lib/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)fabs(__tmp);
 237:/usr/lib/avr/include/util/delay.h **** 
 238:/usr/lib/avr/include/util/delay.h **** 	#elif defined(__DELAY_ROUND_CLOSEST__)
 239:/usr/lib/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(fabs(__tmp)+0.5);
 240:/usr/lib/avr/include/util/delay.h **** 
 241:/usr/lib/avr/include/util/delay.h **** 	#else
 242:/usr/lib/avr/include/util/delay.h **** 		//round up by default
 243:/usr/lib/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
 244:/usr/lib/avr/include/util/delay.h **** 	#endif
 245:/usr/lib/avr/include/util/delay.h **** 
 246:/usr/lib/avr/include/util/delay.h **** 	__builtin_avr_delay_cycles(__ticks_dc);
 425               		.stabn	68,0,246,.LM42-.LFBB3
 426               	.LM42:
 427 0174 FAE0      		ldi r31,lo8(10)
 428 0176 FA95      		1: dec r31
GAS LISTING /tmp/ccfeiFgI.s 			page 14


 429 0178 01F4      		brne 1b
 430               	.LBE5:
 431               	.LBE4:
 432               		.stabs	"../../Libraries/nRF24/nRF24.c",132,0,0,.Ltext2
 433               	.Ltext2:
  68:../../Libraries/nRF24/nRF24.c ****   _delay_us(30);
  69:../../Libraries/nRF24/nRF24.c ****   *CEPort &= ~(1<<CEPin);
 434               		.stabn	68,0,69,.LM43-.LFBB3
 435               	.LM43:
 436 017a F401      		movw r30,r8
 437 017c 8081      		ld r24,Z
 438 017e C094      		com r12
 439 0180 C822      		and r12,r24
 440 0182 C082      		st Z,r12
 441               	/* epilogue start */
  70:../../Libraries/nRF24/nRF24.c **** }
 442               		.stabn	68,0,70,.LM44-.LFBB3
 443               	.LM44:
 444 0184 0F90      		pop __tmp_reg__
 445 0186 DF91      		pop r29
 446 0188 CF91      		pop r28
 447 018a 1F91      		pop r17
 448 018c 0F91      		pop r16
 449 018e FF90      		pop r15
 450 0190 EF90      		pop r14
 451 0192 DF90      		pop r13
 452 0194 CF90      		pop r12
 453 0196 BF90      		pop r11
 454 0198 9F90      		pop r9
 455 019a 8F90      		pop r8
 456 019c 0895      		ret
 457               		.size	WriteTXCharTransmit, .-WriteTXCharTransmit
 458               	.Lscope3:
 459               		.stabs	"",36,0,0,.Lscope3-.LFBB3
 460               		.stabd	78,0,0
 461               		.stabs	"ReadRXChar:F(0,2)",36,0,73,ReadRXChar
 462               		.stabs	"SSPort:P(0,48)",64,0,73,28
 463               		.stabs	"SSPin:P(3,2)",64,0,73,22
 464               	.global	ReadRXChar
 465               		.type	ReadRXChar, @function
 466               	ReadRXChar:
 467               		.stabd	46,0,0
  71:../../Libraries/nRF24/nRF24.c **** 
  72:../../Libraries/nRF24/nRF24.c **** 
  73:../../Libraries/nRF24/nRF24.c **** char ReadRXChar(volatile uint8_t *SSPort, uint8_t SSPin){
 468               		.stabn	68,0,73,.LM45-.LFBB4
 469               	.LM45:
 470               	.LFBB4:
 471 019e 0F93      		push r16
 472 01a0 1F93      		push r17
 473 01a2 CF93      		push r28
 474 01a4 DF93      		push r29
 475               	/* prologue: function */
 476               	/* frame size = 0 */
 477               	/* stack size = 4 */
 478               	.L__stack_usage = 4
 479 01a6 EC01      		movw r28,r24
GAS LISTING /tmp/ccfeiFgI.s 			page 15


  74:../../Libraries/nRF24/nRF24.c **** 
  75:../../Libraries/nRF24/nRF24.c ****   *SSPort &= ~(1<<SSPin);
 480               		.stabn	68,0,75,.LM46-.LFBB4
 481               	.LM46:
 482 01a8 9881      		ld r25,Y
 483 01aa 01E0      		ldi r16,lo8(1)
 484 01ac 10E0      		ldi r17,0
 485 01ae 00C0      		rjmp 2f
 486               		1:
 487 01b0 000F      		lsl r16
 488               		2:
 489 01b2 6A95      		dec r22
 490 01b4 02F4      		brpl 1b
 491 01b6 802F      		mov r24,r16
 492 01b8 8095      		com r24
 493 01ba 8923      		and r24,r25
 494 01bc 8883      		st Y,r24
  76:../../Libraries/nRF24/nRF24.c ****   SPI_MasterTransmitByte(0x61);
 495               		.stabn	68,0,76,.LM47-.LFBB4
 496               	.LM47:
 497 01be 81E6      		ldi r24,lo8(97)
 498 01c0 0E94 0000 		call SPI_MasterTransmitByte
  77:../../Libraries/nRF24/nRF24.c ****   char hold = SPI_MasterTransmitByte(0xFF);
 499               		.stabn	68,0,77,.LM48-.LFBB4
 500               	.LM48:
 501 01c4 8FEF      		ldi r24,lo8(-1)
 502 01c6 0E94 0000 		call SPI_MasterTransmitByte
  78:../../Libraries/nRF24/nRF24.c ****   *SSPort |= (1<<SSPin);
 503               		.stabn	68,0,78,.LM49-.LFBB4
 504               	.LM49:
 505 01ca 9881      		ld r25,Y
 506 01cc 902B      		or r25,r16
 507 01ce 9883      		st Y,r25
 508               	/* epilogue start */
  79:../../Libraries/nRF24/nRF24.c ****   //char hold = SPDR;
  80:../../Libraries/nRF24/nRF24.c ****   return hold;
  81:../../Libraries/nRF24/nRF24.c **** 
  82:../../Libraries/nRF24/nRF24.c **** }
 509               		.stabn	68,0,82,.LM50-.LFBB4
 510               	.LM50:
 511 01d0 DF91      		pop r29
 512 01d2 CF91      		pop r28
 513 01d4 1F91      		pop r17
 514 01d6 0F91      		pop r16
 515 01d8 0895      		ret
 516               		.size	ReadRXChar, .-ReadRXChar
 517               	.Lscope4:
 518               		.stabs	"",36,0,0,.Lscope4-.LFBB4
 519               		.stabd	78,0,0
 520               		.stabs	"",100,0,0,.Letext0
 521               	.Letext0:
 522               		.ident	"GCC: (GNU) 4.8.2"
GAS LISTING /tmp/ccfeiFgI.s 			page 16


DEFINED SYMBOLS
                            *ABS*:0000000000000000 nRF24.c
     /tmp/ccfeiFgI.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccfeiFgI.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccfeiFgI.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccfeiFgI.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccfeiFgI.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccfeiFgI.s:117    .text:0000000000000000 nRF24InitTransmit
     /tmp/ccfeiFgI.s:230    .text:0000000000000084 nRF24InitReceive
     /tmp/ccfeiFgI.s:346    .text:0000000000000108 WriteTXCharTransmit
     /tmp/ccfeiFgI.s:466    .text:000000000000019e ReadRXChar

UNDEFINED SYMBOLS
SPI_MasterTransmitByte
