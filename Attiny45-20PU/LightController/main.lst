GAS LISTING /tmp/ccgbfhEJ.s 			page 1


   1               		.file	"main.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.stabs	"/home/edward/Microcontroller/Attiny45-20PU/LightController/",100,0,2,.Ltext0
   8               		.stabs	"main.c",100,0,2,.Ltext0
   9               		.text
  10               	.Ltext0:
  11               		.stabs	"gcc2_compiled.",60,0,0,0
  12               		.stabs	"int:t(0,1)=r(0,1);-32768;32767;",128,0,0,0
  13               		.stabs	"char:t(0,2)=@s8;r(0,2);0;255;",128,0,0,0
  14               		.stabs	"long int:t(0,3)=@s32;r(0,3);020000000000;017777777777;",128,0,0,0
  15               		.stabs	"unsigned int:t(0,4)=r(0,4);0;0177777;",128,0,0,0
  16               		.stabs	"long unsigned int:t(0,5)=@s32;r(0,5);0;037777777777;",128,0,0,0
  17               		.stabs	"long long int:t(0,6)=@s64;r(0,6);01000000000000000000000;0777777777777777777777;",128,0,0,
  18               		.stabs	"long long unsigned int:t(0,7)=@s64;r(0,7);0;01777777777777777777777;",128,0,0,0
  19               		.stabs	"short int:t(0,8)=r(0,8);-32768;32767;",128,0,0,0
  20               		.stabs	"short unsigned int:t(0,9)=r(0,9);0;0177777;",128,0,0,0
  21               		.stabs	"signed char:t(0,10)=@s8;r(0,10);-128;127;",128,0,0,0
  22               		.stabs	"unsigned char:t(0,11)=@s8;r(0,11);0;255;",128,0,0,0
  23               		.stabs	"float:t(0,12)=r(0,1);4;0;",128,0,0,0
  24               		.stabs	"double:t(0,13)=r(0,1);4;0;",128,0,0,0
  25               		.stabs	"long double:t(0,14)=r(0,1);4;0;",128,0,0,0
  26               		.stabs	"short _Fract:t(0,15)=r(0,1);1;0;",128,0,0,0
  27               		.stabs	"_Fract:t(0,16)=r(0,1);2;0;",128,0,0,0
  28               		.stabs	"long _Fract:t(0,17)=r(0,1);4;0;",128,0,0,0
  29               		.stabs	"long long _Fract:t(0,18)=r(0,1);8;0;",128,0,0,0
  30               		.stabs	"unsigned short _Fract:t(0,19)=r(0,1);1;0;",128,0,0,0
  31               		.stabs	"unsigned _Fract:t(0,20)=r(0,1);2;0;",128,0,0,0
  32               		.stabs	"unsigned long _Fract:t(0,21)=r(0,1);4;0;",128,0,0,0
  33               		.stabs	"unsigned long long _Fract:t(0,22)=r(0,1);8;0;",128,0,0,0
  34               		.stabs	"_Sat short _Fract:t(0,23)=r(0,1);1;0;",128,0,0,0
  35               		.stabs	"_Sat _Fract:t(0,24)=r(0,1);2;0;",128,0,0,0
  36               		.stabs	"_Sat long _Fract:t(0,25)=r(0,1);4;0;",128,0,0,0
  37               		.stabs	"_Sat long long _Fract:t(0,26)=r(0,1);8;0;",128,0,0,0
  38               		.stabs	"_Sat unsigned short _Fract:t(0,27)=r(0,1);1;0;",128,0,0,0
  39               		.stabs	"_Sat unsigned _Fract:t(0,28)=r(0,1);2;0;",128,0,0,0
  40               		.stabs	"_Sat unsigned long _Fract:t(0,29)=r(0,1);4;0;",128,0,0,0
  41               		.stabs	"_Sat unsigned long long _Fract:t(0,30)=r(0,1);8;0;",128,0,0,0
  42               		.stabs	"short _Accum:t(0,31)=r(0,1);2;0;",128,0,0,0
  43               		.stabs	"_Accum:t(0,32)=r(0,1);4;0;",128,0,0,0
  44               		.stabs	"long _Accum:t(0,33)=r(0,1);8;0;",128,0,0,0
  45               		.stabs	"long long _Accum:t(0,34)=r(0,1);8;0;",128,0,0,0
  46               		.stabs	"unsigned short _Accum:t(0,35)=r(0,1);2;0;",128,0,0,0
  47               		.stabs	"unsigned _Accum:t(0,36)=r(0,1);4;0;",128,0,0,0
  48               		.stabs	"unsigned long _Accum:t(0,37)=r(0,1);8;0;",128,0,0,0
  49               		.stabs	"unsigned long long _Accum:t(0,38)=r(0,1);8;0;",128,0,0,0
  50               		.stabs	"_Sat short _Accum:t(0,39)=r(0,1);2;0;",128,0,0,0
  51               		.stabs	"_Sat _Accum:t(0,40)=r(0,1);4;0;",128,0,0,0
  52               		.stabs	"_Sat long _Accum:t(0,41)=r(0,1);8;0;",128,0,0,0
  53               		.stabs	"_Sat long long _Accum:t(0,42)=r(0,1);8;0;",128,0,0,0
  54               		.stabs	"_Sat unsigned short _Accum:t(0,43)=r(0,1);2;0;",128,0,0,0
  55               		.stabs	"_Sat unsigned _Accum:t(0,44)=r(0,1);4;0;",128,0,0,0
  56               		.stabs	"_Sat unsigned long _Accum:t(0,45)=r(0,1);8;0;",128,0,0,0
  57               		.stabs	"_Sat unsigned long long _Accum:t(0,46)=r(0,1);8;0;",128,0,0,0
GAS LISTING /tmp/ccgbfhEJ.s 			page 2


  58               		.stabs	"void:t(0,47)=(0,47)",128,0,0,0
  59               		.stabs	"/usr/lib/avr/include/util/delay.h",130,0,0,0
  60               		.stabs	"/usr/lib/avr/include/inttypes.h",130,0,0,0
  61               		.stabs	"/usr/lib/gcc/avr/4.8.1/include/stdint.h",130,0,0,0
  62               		.stabs	"/usr/lib/avr/include/stdint.h",130,0,0,0
  63               		.stabs	"int8_t:t(4,1)=(0,10)",128,0,121,0
  64               		.stabs	"uint8_t:t(4,2)=(0,11)",128,0,122,0
  65               		.stabs	"int16_t:t(4,3)=(0,1)",128,0,123,0
  66               		.stabs	"uint16_t:t(4,4)=(0,4)",128,0,124,0
  67               		.stabs	"int32_t:t(4,5)=(0,3)",128,0,125,0
  68               		.stabs	"uint32_t:t(4,6)=(0,5)",128,0,126,0
  69               		.stabs	"int64_t:t(4,7)=(0,6)",128,0,128,0
  70               		.stabs	"uint64_t:t(4,8)=(0,7)",128,0,129,0
  71               		.stabs	"intptr_t:t(4,9)=(4,3)",128,0,142,0
  72               		.stabs	"uintptr_t:t(4,10)=(4,4)",128,0,147,0
  73               		.stabs	"int_least8_t:t(4,11)=(4,1)",128,0,159,0
  74               		.stabs	"uint_least8_t:t(4,12)=(4,2)",128,0,164,0
  75               		.stabs	"int_least16_t:t(4,13)=(4,3)",128,0,169,0
  76               		.stabs	"uint_least16_t:t(4,14)=(4,4)",128,0,174,0
  77               		.stabs	"int_least32_t:t(4,15)=(4,5)",128,0,179,0
  78               		.stabs	"uint_least32_t:t(4,16)=(4,6)",128,0,184,0
  79               		.stabs	"int_least64_t:t(4,17)=(4,7)",128,0,192,0
  80               		.stabs	"uint_least64_t:t(4,18)=(4,8)",128,0,199,0
  81               		.stabs	"int_fast8_t:t(4,19)=(4,1)",128,0,213,0
  82               		.stabs	"uint_fast8_t:t(4,20)=(4,2)",128,0,218,0
  83               		.stabs	"int_fast16_t:t(4,21)=(4,3)",128,0,223,0
  84               		.stabs	"uint_fast16_t:t(4,22)=(4,4)",128,0,228,0
  85               		.stabs	"int_fast32_t:t(4,23)=(4,5)",128,0,233,0
  86               		.stabs	"uint_fast32_t:t(4,24)=(4,6)",128,0,238,0
  87               		.stabs	"int_fast64_t:t(4,25)=(4,7)",128,0,246,0
  88               		.stabs	"uint_fast64_t:t(4,26)=(4,8)",128,0,253,0
  89               		.stabs	"intmax_t:t(4,27)=(4,7)",128,0,273,0
  90               		.stabs	"uintmax_t:t(4,28)=(4,8)",128,0,278,0
  91               		.stabn	162,0,0,0
  92               		.stabn	162,0,0,0
  93               		.stabs	"int_farptr_t:t(2,1)=(4,5)",128,0,77,0
  94               		.stabs	"uint_farptr_t:t(2,2)=(4,6)",128,0,81,0
  95               		.stabn	162,0,0,0
  96               		.stabn	162,0,0,0
  97               		.stabs	"/usr/lib/avr/include/avr/io.h",130,0,0,0
  98               		.stabs	"/usr/lib/avr/include/avr/fuse.h",130,0,0,0
  99               		.stabs	"__fuse_t:t(6,1)=(6,2)=s3low:(0,11),0,8;high:(0,11),8,8;extended:(0,11),16,8;;",128,0,244,0
 100               		.stabn	162,0,0,0
 101               		.stabn	162,0,0,0
 102               		.section	.text.startup,"ax",@progbits
 103               		.stabs	"main:F(0,1)",36,0,12,main
 104               	.global	main
 105               		.type	main, @function
 106               	main:
 107               		.stabd	46,0,0
   1:main.c        **** #define F_CPU 8000000UL
   2:main.c        **** #include <util/delay.h>
   3:main.c        **** 
   4:main.c        **** #include <avr/io.h>
   5:main.c        **** #include <avr/interrupt.h>
   6:main.c        **** 
   7:main.c        **** #define TurnOnMask 0x08
GAS LISTING /tmp/ccgbfhEJ.s 			page 3


   8:main.c        **** #define TurnOnPort PINB
   9:main.c        **** #define TurnOffMask 0x10
  10:main.c        **** #define TurnOffPort PINB
  11:main.c        **** 
  12:main.c        **** int main(void)
  13:main.c        **** {
 108               		.stabn	68,0,13,.LM0-.LFBB1
 109               	.LM0:
 110               	.LFBB1:
 111               	/* prologue: function */
 112               	/* frame size = 0 */
 113               	/* stack size = 0 */
 114               	.L__stack_usage = 0
  14:main.c        **** 
  15:main.c        ****   CLKPR = 0x80;
 115               		.stabn	68,0,15,.LM1-.LFBB1
 116               	.LM1:
 117 0000 80E8      		ldi r24,lo8(-128)
 118 0002 86BD      		out 0x26,r24
  16:main.c        ****   CLKPR = 0x00;//Set main clock prescale to 1. 8Mhz
 119               		.stabn	68,0,16,.LM2-.LFBB1
 120               	.LM2:
 121 0004 16BC      		out 0x26,__zero_reg__
  17:main.c        **** 
  18:main.c        ****   TCCR0A |= (1<<WGM01) | (1<<WGM00);//Set into mode 7. PWM with OCR0A as TOP
 122               		.stabn	68,0,18,.LM3-.LFBB1
 123               	.LM3:
 124 0006 8AB5      		in r24,0x2a
 125 0008 8360      		ori r24,lo8(3)
 126 000a 8ABD      		out 0x2a,r24
  19:main.c        ****   TCCR0B |= (1<<WGM02);//Part of previous line, dif register to complete config
 127               		.stabn	68,0,19,.LM4-.LFBB1
 128               	.LM4:
 129 000c 83B7      		in r24,0x33
 130 000e 8860      		ori r24,lo8(8)
 131 0010 83BF      		out 0x33,r24
  20:main.c        ****   DDRB |= (1<<1);//Make PB1 an output
 132               		.stabn	68,0,20,.LM5-.LFBB1
 133               	.LM5:
 134 0012 B99A      		sbi 0x17,1
  21:main.c        ****   PORTB &= ~(1<<1);//Force PB1 Low
 135               		.stabn	68,0,21,.LM6-.LFBB1
 136               	.LM6:
 137 0014 C198      		cbi 0x18,1
  22:main.c        ****   TCCR0A |= (1<<COM0B1);//Noninverting PWM mode with output on OC0B (PB1).
 138               		.stabn	68,0,22,.LM7-.LFBB1
 139               	.LM7:
 140 0016 8AB5      		in r24,0x2a
 141 0018 8062      		ori r24,lo8(32)
 142 001a 8ABD      		out 0x2a,r24
  23:main.c        ****   OCR0A = 0x10;//Set OCR0A (TOP) to 16. Makes generated frequency 8Mhz/16=500Khz
 143               		.stabn	68,0,23,.LM8-.LFBB1
 144               	.LM8:
 145 001c 80E1      		ldi r24,lo8(16)
 146 001e 89BD      		out 0x29,r24
  24:main.c        **** 
  25:main.c        **** 
GAS LISTING /tmp/ccgbfhEJ.s 			page 4


  26:main.c        ****   uint8_t OnState = 0;
  27:main.c        ****   uint8_t OffState = 0;
 147               		.stabn	68,0,27,.LM9-.LFBB1
 148               	.LM9:
 149 0020 80E0      		ldi r24,0
  26:main.c        ****   uint8_t OffState = 0;
 150               		.stabn	68,0,26,.LM10-.LFBB1
 151               	.LM10:
 152 0022 90E0      		ldi r25,0
  28:main.c        ****   uint8_t TurnOnEngaged = 0;
  29:main.c        ****   uint8_t TurnOffEngaged = 0;
  30:main.c        **** 
  31:main.c        ****   for(;;){
  32:main.c        **** 
  33:main.c        ****     if(TurnOnMask & TurnOnPort){
  34:main.c        ****       TurnOnEngaged = 1;
  35:main.c        ****     }else{
  36:main.c        ****       TurnOnEngaged = 0;
  37:main.c        ****     }
  38:main.c        **** 
  39:main.c        ****     if(TurnOffMask & TurnOffPort){
  40:main.c        ****       TurnOffEngaged = 0;
  41:main.c        ****     }else{
  42:main.c        ****       TurnOffEngaged = 1;
  43:main.c        ****     }
  44:main.c        **** 
  45:main.c        ****     if(TurnOnEngaged && !OnState){
  46:main.c        ****       OnState = 1;
  47:main.c        ****       OCR0B = 10;
 153               		.stabn	68,0,47,.LM11-.LFBB1
 154               	.LM11:
 155 0024 3AE0      		ldi r19,lo8(10)
  48:main.c        ****       TCCR0B |= (1<<CS00);
  49:main.c        ****       _delay_ms(100);
  50:main.c        ****       TCCR0B &= ~(1<<CS00);
  51:main.c        ****       _delay_ms(100);
  52:main.c        ****       PORTB &= ~(1<<1);
  53:main.c        ****     }else if(!TurnOnEngaged && OnState){
  54:main.c        ****       OnState = 0;
  55:main.c        ****       PORTB &= ~(1<<1);
  56:main.c        ****     }else{;}
  57:main.c        **** 
  58:main.c        ****     if(TurnOffEngaged && !OffState){
  59:main.c        ****       OffState = 1;
  60:main.c        ****       OCR0B = 5;
 156               		.stabn	68,0,60,.LM12-.LFBB1
 157               	.LM12:
 158 0026 45E0      		ldi r20,lo8(5)
 159               	.L2:
  33:main.c        ****       TurnOnEngaged = 1;
 160               		.stabn	68,0,33,.LM13-.LFBB1
 161               	.LM13:
 162 0028 56B3      		in r21,0x16
  39:main.c        ****       TurnOffEngaged = 0;
 163               		.stabn	68,0,39,.LM14-.LFBB1
 164               	.LM14:
 165 002a 26B3      		in r18,0x16
GAS LISTING /tmp/ccgbfhEJ.s 			page 5


 166 002c 2071      		andi r18,lo8(16)
  45:main.c        ****       OnState = 1;
 167               		.stabn	68,0,45,.LM15-.LFBB1
 168               	.LM15:
 169 002e 53FF      		sbrs r21,3
 170 0030 00C0      		rjmp .L3
  45:main.c        ****       OnState = 1;
 171               		.stabn	68,0,45,.LM16-.LFBB1
 172               	.LM16:
 173 0032 9111      		cpse r25,__zero_reg__
 174 0034 00C0      		rjmp .L7
  47:main.c        ****       TCCR0B |= (1<<CS00);
 175               		.stabn	68,0,47,.LM17-.LFBB1
 176               	.LM17:
 177 0036 38BD      		out 0x28,r19
  48:main.c        ****       _delay_ms(100);
 178               		.stabn	68,0,48,.LM18-.LFBB1
 179               	.LM18:
 180 0038 93B7      		in r25,0x33
 181 003a 9160      		ori r25,lo8(1)
 182 003c 93BF      		out 0x33,r25
 183               	.LBB10:
 184               	.LBB11:
 185               		.stabs	"/usr/lib/avr/include/util/delay.h",132,0,0,.Ltext1
 186               	.Ltext1:
   1:/usr/lib/avr/include/util/delay.h **** /* Copyright (c) 2002, Marek Michalkiewicz
   2:/usr/lib/avr/include/util/delay.h ****    Copyright (c) 2004,2005,2007 Joerg Wunsch
   3:/usr/lib/avr/include/util/delay.h ****    Copyright (c) 2007  Florin-Viorel Petrov
   4:/usr/lib/avr/include/util/delay.h ****    All rights reserved.
   5:/usr/lib/avr/include/util/delay.h **** 
   6:/usr/lib/avr/include/util/delay.h ****    Redistribution and use in source and binary forms, with or without
   7:/usr/lib/avr/include/util/delay.h ****    modification, are permitted provided that the following conditions are met:
   8:/usr/lib/avr/include/util/delay.h **** 
   9:/usr/lib/avr/include/util/delay.h ****    * Redistributions of source code must retain the above copyright
  10:/usr/lib/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer.
  11:/usr/lib/avr/include/util/delay.h **** 
  12:/usr/lib/avr/include/util/delay.h ****    * Redistributions in binary form must reproduce the above copyright
  13:/usr/lib/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer in
  14:/usr/lib/avr/include/util/delay.h ****      the documentation and/or other materials provided with the
  15:/usr/lib/avr/include/util/delay.h ****      distribution.
  16:/usr/lib/avr/include/util/delay.h **** 
  17:/usr/lib/avr/include/util/delay.h ****    * Neither the name of the copyright holders nor the names of
  18:/usr/lib/avr/include/util/delay.h ****      contributors may be used to endorse or promote products derived
  19:/usr/lib/avr/include/util/delay.h ****      from this software without specific prior written permission.
  20:/usr/lib/avr/include/util/delay.h **** 
  21:/usr/lib/avr/include/util/delay.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:/usr/lib/avr/include/util/delay.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:/usr/lib/avr/include/util/delay.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:/usr/lib/avr/include/util/delay.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  25:/usr/lib/avr/include/util/delay.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:/usr/lib/avr/include/util/delay.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:/usr/lib/avr/include/util/delay.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:/usr/lib/avr/include/util/delay.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:/usr/lib/avr/include/util/delay.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:/usr/lib/avr/include/util/delay.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:/usr/lib/avr/include/util/delay.h ****   POSSIBILITY OF SUCH DAMAGE. */
  32:/usr/lib/avr/include/util/delay.h **** 
GAS LISTING /tmp/ccgbfhEJ.s 			page 6


  33:/usr/lib/avr/include/util/delay.h **** /* $Id$ */
  34:/usr/lib/avr/include/util/delay.h **** 
  35:/usr/lib/avr/include/util/delay.h **** #ifndef _UTIL_DELAY_H_
  36:/usr/lib/avr/include/util/delay.h **** #define _UTIL_DELAY_H_ 1
  37:/usr/lib/avr/include/util/delay.h **** 
  38:/usr/lib/avr/include/util/delay.h **** #ifndef __HAS_DELAY_CYCLES
  39:/usr/lib/avr/include/util/delay.h **** #define __HAS_DELAY_CYCLES 1
  40:/usr/lib/avr/include/util/delay.h **** #endif
  41:/usr/lib/avr/include/util/delay.h **** 
  42:/usr/lib/avr/include/util/delay.h **** #include <inttypes.h>
  43:/usr/lib/avr/include/util/delay.h **** #include <util/delay_basic.h>
  44:/usr/lib/avr/include/util/delay.h **** #include <math.h>
  45:/usr/lib/avr/include/util/delay.h **** 
  46:/usr/lib/avr/include/util/delay.h **** /** \file */
  47:/usr/lib/avr/include/util/delay.h **** /** \defgroup util_delay <util/delay.h>: Convenience functions for busy-wait delay loops
  48:/usr/lib/avr/include/util/delay.h ****     \code
  49:/usr/lib/avr/include/util/delay.h ****     #define F_CPU 1000000UL  // 1 MHz
  50:/usr/lib/avr/include/util/delay.h ****     //#define F_CPU 14.7456E6
  51:/usr/lib/avr/include/util/delay.h ****     #include <util/delay.h>
  52:/usr/lib/avr/include/util/delay.h ****     \endcode
  53:/usr/lib/avr/include/util/delay.h **** 
  54:/usr/lib/avr/include/util/delay.h ****     \note As an alternative method, it is possible to pass the
  55:/usr/lib/avr/include/util/delay.h ****     F_CPU macro down to the compiler from the Makefile.
  56:/usr/lib/avr/include/util/delay.h ****     Obviously, in that case, no \c \#define statement should be
  57:/usr/lib/avr/include/util/delay.h ****     used.
  58:/usr/lib/avr/include/util/delay.h **** 
  59:/usr/lib/avr/include/util/delay.h ****     The functions in this header file are wrappers around the basic
  60:/usr/lib/avr/include/util/delay.h ****     busy-wait functions from <util/delay_basic.h>.  They are meant as
  61:/usr/lib/avr/include/util/delay.h ****     convenience functions where actual time values can be specified
  62:/usr/lib/avr/include/util/delay.h ****     rather than a number of cycles to wait for.  The idea behind is
  63:/usr/lib/avr/include/util/delay.h ****     that compile-time constant expressions will be eliminated by
  64:/usr/lib/avr/include/util/delay.h ****     compiler optimization so floating-point expressions can be used
  65:/usr/lib/avr/include/util/delay.h ****     to calculate the number of delay cycles needed based on the CPU
  66:/usr/lib/avr/include/util/delay.h ****     frequency passed by the macro F_CPU.
  67:/usr/lib/avr/include/util/delay.h **** 
  68:/usr/lib/avr/include/util/delay.h ****     \note In order for these functions to work as intended, compiler
  69:/usr/lib/avr/include/util/delay.h ****     optimizations <em>must</em> be enabled, and the delay time
  70:/usr/lib/avr/include/util/delay.h ****     <em>must</em> be an expression that is a known constant at
  71:/usr/lib/avr/include/util/delay.h ****     compile-time.  If these requirements are not met, the resulting
  72:/usr/lib/avr/include/util/delay.h ****     delay will be much longer (and basically unpredictable), and
  73:/usr/lib/avr/include/util/delay.h ****     applications that otherwise do not use floating-point calculations
  74:/usr/lib/avr/include/util/delay.h ****     will experience severe code bloat by the floating-point library
  75:/usr/lib/avr/include/util/delay.h ****     routines linked into the application.
  76:/usr/lib/avr/include/util/delay.h **** 
  77:/usr/lib/avr/include/util/delay.h ****     The functions available allow the specification of microsecond, and
  78:/usr/lib/avr/include/util/delay.h ****     millisecond delays directly, using the application-supplied macro
  79:/usr/lib/avr/include/util/delay.h ****     F_CPU as the CPU clock frequency (in Hertz).
  80:/usr/lib/avr/include/util/delay.h **** 
  81:/usr/lib/avr/include/util/delay.h **** */
  82:/usr/lib/avr/include/util/delay.h **** 
  83:/usr/lib/avr/include/util/delay.h **** #if !defined(__DOXYGEN__)
  84:/usr/lib/avr/include/util/delay.h **** static inline void _delay_us(double __us) __attribute__((always_inline));
  85:/usr/lib/avr/include/util/delay.h **** static inline void _delay_ms(double __ms) __attribute__((always_inline));
  86:/usr/lib/avr/include/util/delay.h **** #endif
  87:/usr/lib/avr/include/util/delay.h **** 
  88:/usr/lib/avr/include/util/delay.h **** #ifndef F_CPU
  89:/usr/lib/avr/include/util/delay.h **** /* prevent compiler error by supplying a default */
GAS LISTING /tmp/ccgbfhEJ.s 			page 7


  90:/usr/lib/avr/include/util/delay.h **** # warning "F_CPU not defined for <util/delay.h>"
  91:/usr/lib/avr/include/util/delay.h **** # define F_CPU 1000000UL
  92:/usr/lib/avr/include/util/delay.h **** #endif
  93:/usr/lib/avr/include/util/delay.h **** 
  94:/usr/lib/avr/include/util/delay.h **** #ifndef __OPTIMIZE__
  95:/usr/lib/avr/include/util/delay.h **** # warning "Compiler optimizations disabled; functions from <util/delay.h> won't work as designed"
  96:/usr/lib/avr/include/util/delay.h **** #endif
  97:/usr/lib/avr/include/util/delay.h **** 
  98:/usr/lib/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
  99:/usr/lib/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 100:/usr/lib/avr/include/util/delay.h ****   __STDC_HOSTED__
 101:/usr/lib/avr/include/util/delay.h **** #  include <math.h>
 102:/usr/lib/avr/include/util/delay.h **** #endif
 103:/usr/lib/avr/include/util/delay.h **** 
 104:/usr/lib/avr/include/util/delay.h **** /**
 105:/usr/lib/avr/include/util/delay.h ****    \ingroup util_delay
 106:/usr/lib/avr/include/util/delay.h **** 
 107:/usr/lib/avr/include/util/delay.h ****    Perform a delay of \c __ms milliseconds, using _delay_loop_2().
 108:/usr/lib/avr/include/util/delay.h **** 
 109:/usr/lib/avr/include/util/delay.h ****    The macro F_CPU is supposed to be defined to a
 110:/usr/lib/avr/include/util/delay.h ****    constant defining the CPU clock frequency (in Hertz).
 111:/usr/lib/avr/include/util/delay.h **** 
 112:/usr/lib/avr/include/util/delay.h ****    The maximal possible delay is 262.14 ms / F_CPU in MHz.
 113:/usr/lib/avr/include/util/delay.h **** 
 114:/usr/lib/avr/include/util/delay.h ****    When the user request delay which exceed the maximum possible one,
 115:/usr/lib/avr/include/util/delay.h ****    _delay_ms() provides a decreased resolution functionality. In this
 116:/usr/lib/avr/include/util/delay.h ****    mode _delay_ms() will work with a resolution of 1/10 ms, providing
 117:/usr/lib/avr/include/util/delay.h ****    delays up to 6.5535 seconds (independent from CPU frequency).  The
 118:/usr/lib/avr/include/util/delay.h ****    user will not be informed about decreased resolution.
 119:/usr/lib/avr/include/util/delay.h **** 
 120:/usr/lib/avr/include/util/delay.h ****    If the avr-gcc toolchain has __builtin_avr_delay_cycles(unsigned long)
 121:/usr/lib/avr/include/util/delay.h ****    support, maximal possible delay is 4294967.295 ms/ F_CPU in MHz. For
 122:/usr/lib/avr/include/util/delay.h ****    values greater than the maximal possible delay, overflows results in
 123:/usr/lib/avr/include/util/delay.h ****    no delay i.e., 0ms.
 124:/usr/lib/avr/include/util/delay.h **** 
 125:/usr/lib/avr/include/util/delay.h ****    Conversion of __us into clock cycles may not always result in integer.
 126:/usr/lib/avr/include/util/delay.h ****    By default, the clock cycles rounded up to next integer. This ensures that
 127:/usr/lib/avr/include/util/delay.h ****    the user gets atleast __us microseconds of delay.
 128:/usr/lib/avr/include/util/delay.h **** 
 129:/usr/lib/avr/include/util/delay.h ****    Alternatively, user can define __DELAY_ROUND_DOWN__ and __DELAY_ROUND_CLOSEST__
 130:/usr/lib/avr/include/util/delay.h ****    to round down and round to closest integer.
 131:/usr/lib/avr/include/util/delay.h **** 
 132:/usr/lib/avr/include/util/delay.h ****    Note: The new implementation of _delay_ms(double __ms) with 
 133:/usr/lib/avr/include/util/delay.h ****     __builtin_avr_delay_cycles(unsigned long) support is not backward compatible. 
 134:/usr/lib/avr/include/util/delay.h ****    User can define __DELAY_BACKWARD_COMPATIBLE__ to get a backward compatible delay.
 135:/usr/lib/avr/include/util/delay.h ****    Also, the backward compatible
 136:/usr/lib/avr/include/util/delay.h ****    algorithm will be chosen if the code is compiled in a <em>freestanding
 137:/usr/lib/avr/include/util/delay.h ****    environment</em> (GCC option \c -ffreestanding), as the math functions
 138:/usr/lib/avr/include/util/delay.h ****    required for rounding are not available to the compiler then.
 139:/usr/lib/avr/include/util/delay.h **** 
 140:/usr/lib/avr/include/util/delay.h ****  */
 141:/usr/lib/avr/include/util/delay.h **** void
 142:/usr/lib/avr/include/util/delay.h **** _delay_ms(double __ms)
 143:/usr/lib/avr/include/util/delay.h **** {
 144:/usr/lib/avr/include/util/delay.h **** 	double __tmp ; 
 145:/usr/lib/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 146:/usr/lib/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
GAS LISTING /tmp/ccgbfhEJ.s 			page 8


 147:/usr/lib/avr/include/util/delay.h ****   __STDC_HOSTED__
 148:/usr/lib/avr/include/util/delay.h **** 	uint32_t __ticks_dc;
 149:/usr/lib/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 150:/usr/lib/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 151:/usr/lib/avr/include/util/delay.h **** 
 152:/usr/lib/avr/include/util/delay.h **** 	#if defined(__DELAY_ROUND_DOWN__)
 153:/usr/lib/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)fabs(__tmp);
 154:/usr/lib/avr/include/util/delay.h **** 
 155:/usr/lib/avr/include/util/delay.h **** 	#elif defined(__DELAY_ROUND_CLOSEST__)
 156:/usr/lib/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(fabs(__tmp)+0.5);
 157:/usr/lib/avr/include/util/delay.h **** 
 158:/usr/lib/avr/include/util/delay.h **** 	#else
 159:/usr/lib/avr/include/util/delay.h **** 		//round up by default
 160:/usr/lib/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
 161:/usr/lib/avr/include/util/delay.h **** 	#endif
 162:/usr/lib/avr/include/util/delay.h **** 
 163:/usr/lib/avr/include/util/delay.h **** 	__builtin_avr_delay_cycles(__ticks_dc);
 187               		.stabn	68,0,163,.LM19-.LFBB1
 188               	.LM19:
 189 003e 5FEF      		ldi r21,lo8(159999)
 190 0040 60E7      		ldi r22,hi8(159999)
 191 0042 92E0      		ldi r25,hlo8(159999)
 192 0044 5150      		1: subi r21,1
 193 0046 6040      		sbci r22,0
 194 0048 9040      		sbci r25,0
 195 004a 01F4      		brne 1b
 196 004c 00C0      		rjmp .
 197 004e 0000      		nop
 198               	.LBE11:
 199               	.LBE10:
 200               		.stabs	"main.c",132,0,0,.Ltext2
 201               	.Ltext2:
  50:main.c        ****       _delay_ms(100);
 202               		.stabn	68,0,50,.LM20-.LFBB1
 203               	.LM20:
 204 0050 93B7      		in r25,0x33
 205 0052 9E7F      		andi r25,lo8(-2)
 206 0054 93BF      		out 0x33,r25
 207               	.LBB12:
 208               	.LBB13:
 209               		.stabs	"/usr/lib/avr/include/util/delay.h",132,0,0,.Ltext3
 210               	.Ltext3:
 211               		.stabn	68,0,163,.LM21-.LFBB1
 212               	.LM21:
 213 0056 5FEF      		ldi r21,lo8(159999)
 214 0058 60E7      		ldi r22,hi8(159999)
 215 005a 92E0      		ldi r25,hlo8(159999)
 216 005c 5150      		1: subi r21,1
 217 005e 6040      		sbci r22,0
 218 0060 9040      		sbci r25,0
 219 0062 01F4      		brne 1b
 220 0064 00C0      		rjmp .
 221 0066 0000      		nop
 222               	.LBE13:
 223               	.LBE12:
 224               		.stabs	"main.c",132,0,0,.Ltext4
 225               	.Ltext4:
GAS LISTING /tmp/ccgbfhEJ.s 			page 9


  52:main.c        ****     }else if(!TurnOnEngaged && OnState){
 226               		.stabn	68,0,52,.LM22-.LFBB1
 227               	.LM22:
 228 0068 C198      		cbi 0x18,1
 229 006a 00C0      		rjmp .L7
 230               	.L3:
  53:main.c        ****       OnState = 0;
 231               		.stabn	68,0,53,.LM23-.LFBB1
 232               	.LM23:
 233 006c 9923      		tst r25
 234 006e 01F0      		breq .L4
  55:main.c        ****     }else{;}
 235               		.stabn	68,0,55,.LM24-.LFBB1
 236               	.LM24:
 237 0070 C198      		cbi 0x18,1
  54:main.c        ****       PORTB &= ~(1<<1);
 238               		.stabn	68,0,54,.LM25-.LFBB1
 239               	.LM25:
 240 0072 90E0      		ldi r25,0
 241 0074 00C0      		rjmp .L4
 242               	.L7:
 243 0076 91E0      		ldi r25,lo8(1)
 244               	.L4:
  58:main.c        ****       OffState = 1;
 245               		.stabn	68,0,58,.LM26-.LFBB1
 246               	.LM26:
 247 0078 2111      		cpse r18,__zero_reg__
 248 007a 00C0      		rjmp .L5
  58:main.c        ****       OffState = 1;
 249               		.stabn	68,0,58,.LM27-.LFBB1
 250               	.LM27:
 251 007c 8823      		tst r24
 252 007e 01F0      		breq .L16
 253               	.L8:
 254 0080 81E0      		ldi r24,lo8(1)
 255 0082 00C0      		rjmp .L2
 256               	.L16:
 257               		.stabn	68,0,60,.LM28-.LFBB1
 258               	.LM28:
 259 0084 48BD      		out 0x28,r20
  61:main.c        ****       TCCR0B |= (1<<CS00);
 260               		.stabn	68,0,61,.LM29-.LFBB1
 261               	.LM29:
 262 0086 83B7      		in r24,0x33
 263 0088 8160      		ori r24,lo8(1)
 264 008a 83BF      		out 0x33,r24
 265               	.LBB14:
 266               	.LBB15:
 267               		.stabs	"/usr/lib/avr/include/util/delay.h",132,0,0,.Ltext5
 268               	.Ltext5:
 269               		.stabn	68,0,163,.LM30-.LFBB1
 270               	.LM30:
 271 008c 2FEF      		ldi r18,lo8(159999)
 272 008e 50E7      		ldi r21,hi8(159999)
 273 0090 62E0      		ldi r22,hlo8(159999)
 274 0092 2150      		1: subi r18,1
 275 0094 5040      		sbci r21,0
GAS LISTING /tmp/ccgbfhEJ.s 			page 10


 276 0096 6040      		sbci r22,0
 277 0098 01F4      		brne 1b
 278 009a 00C0      		rjmp .
 279 009c 0000      		nop
 280               	.LBE15:
 281               	.LBE14:
 282               		.stabs	"main.c",132,0,0,.Ltext6
 283               	.Ltext6:
  62:main.c        ****       _delay_ms(100);
  63:main.c        ****       TCCR0B &= ~(1<<CS00);
 284               		.stabn	68,0,63,.LM31-.LFBB1
 285               	.LM31:
 286 009e 83B7      		in r24,0x33
 287 00a0 8E7F      		andi r24,lo8(-2)
 288 00a2 83BF      		out 0x33,r24
 289               	.LBB16:
 290               	.LBB17:
 291               		.stabs	"/usr/lib/avr/include/util/delay.h",132,0,0,.Ltext7
 292               	.Ltext7:
 293               		.stabn	68,0,163,.LM32-.LFBB1
 294               	.LM32:
 295 00a4 8FEF      		ldi r24,lo8(159999)
 296 00a6 20E7      		ldi r18,hi8(159999)
 297 00a8 52E0      		ldi r21,hlo8(159999)
 298 00aa 8150      		1: subi r24,1
 299 00ac 2040      		sbci r18,0
 300 00ae 5040      		sbci r21,0
 301 00b0 01F4      		brne 1b
 302 00b2 00C0      		rjmp .
 303 00b4 0000      		nop
 304               	.LBE17:
 305               	.LBE16:
 306               		.stabs	"main.c",132,0,0,.Ltext8
 307               	.Ltext8:
  64:main.c        ****       _delay_ms(100);
  65:main.c        ****       PORTB &= ~(1<<1);
 308               		.stabn	68,0,65,.LM33-.LFBB1
 309               	.LM33:
 310 00b6 C198      		cbi 0x18,1
 311 00b8 00C0      		rjmp .L8
 312               	.L5:
  66:main.c        ****     }else if(!TurnOffEngaged && OffState){
 313               		.stabn	68,0,66,.LM34-.LFBB1
 314               	.LM34:
 315 00ba 8823      		tst r24
 316 00bc 01F4      		brne .+2
 317 00be 00C0      		rjmp .L2
  67:main.c        ****       OffState = 0;
  68:main.c        ****       PORTB &= ~(1<<1);
 318               		.stabn	68,0,68,.LM35-.LFBB1
 319               	.LM35:
 320 00c0 C198      		cbi 0x18,1
  67:main.c        ****       OffState = 0;
 321               		.stabn	68,0,67,.LM36-.LFBB1
 322               	.LM36:
 323 00c2 80E0      		ldi r24,0
 324 00c4 00C0      		rjmp .L2
GAS LISTING /tmp/ccgbfhEJ.s 			page 11


 325               		.size	main, .-main
 326               		.stabs	"OnState:r(4,2)",64,0,26,25
 327               		.stabs	"OffState:r(4,2)",64,0,27,24
 328               		.stabn	192,0,0,.LFBB1-.LFBB1
 329               		.stabn	224,0,0,.Lscope1-.LFBB1
 330               	.Lscope1:
 331               		.stabs	"",36,0,0,.Lscope1-.LFBB1
 332               		.stabd	78,0,0
 333               		.text
 334               		.stabs	"",100,0,0,.Letext0
 335               	.Letext0:
 336               		.ident	"GCC: (GNU) 4.8.1"
GAS LISTING /tmp/ccgbfhEJ.s 			page 12


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccgbfhEJ.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccgbfhEJ.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccgbfhEJ.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccgbfhEJ.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccgbfhEJ.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccgbfhEJ.s:106    .text.startup:0000000000000000 main

NO UNDEFINED SYMBOLS
